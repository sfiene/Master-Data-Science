<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.16.1103.2343                               -->
<workbook source-build='10.1.1 (10100.16.1103.2343)' source-platform='win' version='10.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='US_Superstore_Rev' path='/workbooks' revision='1.1' />
  <preferences>
    <preference name='datagrid.autoupdate.max.filesize' value='100000000000' />
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.registrationform.stagingWebContentSwitch' value='1' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.1'>
      <aliases enabled='yes' />
      <column caption='Base Salary' datatype='integer' name='[Base Salary]' param-domain-type='range' role='measure' type='quantitative' value='50000'>
        <calculation class='tableau' formula='50000' />
        <range granularity='1000' min='0' />
      </column>
      <column caption='Commission Rate' datatype='real' default-format='n#,##0.0&quot;%&quot;;-#,##0.0&quot;%&quot;' name='[Commission Rate]' param-domain-type='range' role='measure' type='quantitative' value='18.400000000000002'>
        <calculation class='tableau' formula='18.400000000000002' />
        <range granularity='0.10000000000000001' max='100.0' min='1.0' />
      </column>
      <column caption='New Quota' datatype='integer' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[New Quota]' param-domain-type='range' role='measure' type='quantitative' value='500000'>
        <calculation class='tableau' formula='500000' />
        <range granularity='25000' min='100000' />
      </column>
      <column caption='Sort by' datatype='string' name='[Parameter 1 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Names&quot;'>
        <calculation class='tableau' formula='&quot;Names&quot;' />
        <members>
          <member value='&quot;\% quota ascending&quot;' />
          <member value='&quot;\% quota descending&quot;' />
          <member value='&quot;Names&quot;' />
        </members>
      </column>
      <column caption='New Business Growth' datatype='real' default-format='p0%' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.59999999999999998'>
        <calculation class='tableau' formula='0.59999999999999998' />
        <range granularity='0.01' max='1.0' min='0.0' />
      </column>
      <column caption='Churn Rate' datatype='real' default-format='p0.00%' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0.064000000000000001'>
        <calculation class='tableau' formula='0.064000000000000001' />
        <range granularity='0.001' max='0.25' min='0.0' />
      </column>
      <column caption='State' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Alabama&quot;'>
        <calculation class='tableau' formula='&quot;Alabama&quot;' />
        <members>
          <member value='&quot;Alabama&quot;' />
          <member value='&quot;Arizona&quot;' />
          <member value='&quot;Arkansas&quot;' />
          <member value='&quot;California&quot;' />
          <member value='&quot;Colorado&quot;' />
          <member value='&quot;Connecticut&quot;' />
          <member value='&quot;Delaware&quot;' />
          <member value='&quot;District of Columbia&quot;' />
          <member value='&quot;Florida&quot;' />
          <member value='&quot;Georgia&quot;' />
          <member value='&quot;Idaho&quot;' />
          <member value='&quot;Illinois&quot;' />
          <member value='&quot;Indiana&quot;' />
          <member value='&quot;Iowa&quot;' />
          <member value='&quot;Kansas&quot;' />
          <member value='&quot;Kentucky&quot;' />
          <member value='&quot;Louisiana&quot;' />
          <member value='&quot;Maine&quot;' />
          <member value='&quot;Maryland&quot;' />
          <member value='&quot;Massachusetts&quot;' />
          <member value='&quot;Michigan&quot;' />
          <member value='&quot;Minnesota&quot;' />
          <member value='&quot;Mississippi&quot;' />
          <member value='&quot;Missouri&quot;' />
          <member value='&quot;Montana&quot;' />
          <member value='&quot;Nebraska&quot;' />
          <member value='&quot;Nevada&quot;' />
          <member value='&quot;New Hampshire&quot;' />
          <member value='&quot;New Jersey&quot;' />
          <member value='&quot;New Mexico&quot;' />
          <member value='&quot;New York&quot;' />
          <member value='&quot;North Carolina&quot;' />
          <member value='&quot;North Dakota&quot;' />
          <member value='&quot;Ohio&quot;' />
          <member value='&quot;Oklahoma&quot;' />
          <member value='&quot;Oregon&quot;' />
          <member value='&quot;Pennsylvania&quot;' />
          <member value='&quot;Rhode Island&quot;' />
          <member value='&quot;South Carolina&quot;' />
          <member value='&quot;South Dakota&quot;' />
          <member value='&quot;Tennessee&quot;' />
          <member value='&quot;Texas&quot;' />
          <member value='&quot;Utah&quot;' />
          <member value='&quot;Vermont&quot;' />
          <member value='&quot;Virginia&quot;' />
          <member value='&quot;Washington&quot;' />
          <member value='&quot;West Virginia&quot;' />
          <member value='&quot;Wisconsin&quot;' />
          <member value='&quot;Wyoming&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='Sample - Superstore' inline='true' name='dataengine.42019.618651678240' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='dataengine.42019.618651678240leaf'>
            <connection class='dataengine' dbname='Data/en_US-US 1/Sample - Superstore.tde' password='' schema='Extract' tablename='Extract' workgroup-auth-mode='as-is'>
              <calculations>
                <calculation column='[Number of Records]' formula='1' />
              </calculations>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='dataengine.42019.618651678240leaf' name='Extract' table='[Extract].[Extract]' type='table' />
        <calculations>
          <calculation column='[Number of Records]' formula='1' />
        </calculations>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>0</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Furniture&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Technology&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>1</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>531</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Aberdeen&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Yuma&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;United States&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;United States&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
              <statistic aggregation='Median' datatype='string'>&quot;United States&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>3</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>793</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;AA-10315&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;ZD-21925&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>4</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>793</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Aaron Bergman&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Zuschuss Donatelli&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>5</ordinal>
            <family>Orders</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>12</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>0.80000000000000004</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>16</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Records</remote-name>
            <remote-type>16</remote-type>
            <local-name>[Number of Records]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Number of Records</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>9994.0</statistic>
              <statistic aggregation='Avg' datatype='real'>1.0</statistic>
              <statistic aggregation='Min' datatype='integer'>1</statistic>
              <statistic aggregation='Max' datatype='integer'>1</statistic>
              <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
              <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
              <statistic aggregation='Var' datatype='real'>0.0</statistic>
              <statistic aggregation='VarP' datatype='real'>0.0</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
              <statistic aggregation='Median' datatype='integer'>1</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>9994.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>7</ordinal>
            <family>Orders</family>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <approx-count>1237</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='date'>#2013-01-03#</statistic>
              <statistic aggregation='Max' datatype='date'>#2016-12-30#</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
              <statistic aggregation='Median' datatype='date'>#2015-06-27#</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>8</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5009</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;CA-2011-100006&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;US-2014-169551&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>14</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>9</ordinal>
            <family>Orders</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>631</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>551572652.0</statistic>
              <statistic aggregation='Avg' datatype='real'>55190.379427656597</statistic>
              <statistic aggregation='Min' datatype='integer'>1040</statistic>
              <statistic aggregation='Max' datatype='integer'>99301</statistic>
              <statistic aggregation='Stdev' datatype='real'>32063.693350364487</statistic>
              <statistic aggregation='StdevP' datatype='real'>32062.089163078908</statistic>
              <statistic aggregation='Var' datatype='real'>1028080431.2662077</statistic>
              <statistic aggregation='VarP' datatype='real'>1027977561.501222</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>40715111695442.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>10</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1862</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;FUR-BO-10000112&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;TEC-PH-10004977&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>13</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>11</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1850</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;\&quot;While you Were Out\&quot; Message Book, One Form per Page&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Zipper Ring Binder Pockets&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>12</ordinal>
            <family>Orders</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>7545</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>286397.02169999923</statistic>
              <statistic aggregation='Avg' datatype='real'>28.656896307784592</statistic>
              <statistic aggregation='Min' datatype='real'>-6599.978000000001</statistic>
              <statistic aggregation='Max' datatype='real'>8399.9759999999987</statistic>
              <statistic aggregation='Stdev' datatype='real'>234.26010769095728</statistic>
              <statistic aggregation='StdevP' datatype='real'>234.24838736035878</statistic>
              <statistic aggregation='Var' datatype='real'>54877.798055378902</statistic>
              <statistic aggregation='VarP' datatype='real'>54872.30698092869</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>556601085.72111654</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>16</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>13</ordinal>
            <family>Orders</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>14</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>37873.0</statistic>
              <statistic aggregation='Avg' datatype='real'>3.7895737442465478</statistic>
              <statistic aggregation='Min' datatype='integer'>1</statistic>
              <statistic aggregation='Max' datatype='integer'>14</statistic>
              <statistic aggregation='Stdev' datatype='real'>2.2251096911413999</statistic>
              <statistic aggregation='StdevP' datatype='real'>2.2249983660786095</statistic>
              <statistic aggregation='Var' datatype='real'>4.9511131376113768</statistic>
              <statistic aggregation='VarP' datatype='real'>4.9506177290524809</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>192999.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>14</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Central&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;West&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>15</ordinal>
            <family>Orders</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>9994</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>49945015.0</statistic>
              <statistic aggregation='Avg' datatype='real'>4997.5</statistic>
              <statistic aggregation='Min' datatype='integer'>1</statistic>
              <statistic aggregation='Max' datatype='integer'>9994</statistic>
              <statistic aggregation='Stdev' datatype='real'>2885.1636290974325</statistic>
              <statistic aggregation='StdevP' datatype='real'>2885.0192806981377</statistic>
              <statistic aggregation='Var' datatype='real'>8324169.166666667</statistic>
              <statistic aggregation='VarP' datatype='real'>8323336.25</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>332783634945.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>15</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>16</ordinal>
            <family>Orders</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>6144</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>2297200.8602999486</statistic>
              <statistic aggregation='Avg' datatype='real'>229.85800083049315</statistic>
              <statistic aggregation='Min' datatype='real'>0.44399999999999995</statistic>
              <statistic aggregation='Max' datatype='real'>22638.48</statistic>
              <statistic aggregation='Stdev' datatype='real'>623.245100508684</statistic>
              <statistic aggregation='StdevP' datatype='real'>623.21391876504924</statistic>
              <statistic aggregation='Var' datatype='real'>388434.4553080796</statistic>
              <statistic aggregation='VarP' datatype='real'>388395.58854248945</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>4409655509.1482744</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>17</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Consumer&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Home Office&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>18</ordinal>
            <family>Orders</family>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <approx-count>1334</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='date'>#2013-01-07#</statistic>
              <statistic aggregation='Max' datatype='date'>#2017-01-05#</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>19</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;First Class&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Standard Class&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>20</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>49</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Alabama&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Wyoming&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>21</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>17</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Accessories&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Tables&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[dataengine.42019.618651678240].[ctd:Customer Name:qk]&quot;' value='Count of Customers' />
        </aliases>
      </column>
      <column caption='Days to Ship Actual' datatype='integer' name='[Calculation_0831103151444568]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;,[Order Date],[Ship Date])' />
      </column>
      <column caption='Sales estimate' datatype='real' default-format='c&quot;$&quot;#,##0,.0K;(&quot;$&quot;#,##0,.0K)' name='[Calculation_1641214165608856]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Sales]*(1-[Parameters].[Parameter 2])*(1+[Parameters].[Parameter 1])' />
      </column>
      <column caption='Sales Forecast' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_5421109230915137]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Sales]*(1-[Parameters].[Parameter 2])*(1+[Parameters].[Parameter 1])' />
      </column>
      <column caption='Ship Status' datatype='string' name='[Calculation_6401103171259723]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [Calculation_0831103151444568]&gt; [Calculation_6861103170623145] then &quot;Shipped Late&quot; &#13;&#10;elseIF [Calculation_0831103151444568]= [Calculation_6861103170623145] then &quot;Shipped On Time&quot;&#13;&#10;Else &quot;Shipped Early&quot; end' />
        <desc>
          <formatted-text>
            <run>Was shipment early, ontime or late based on ship mode</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Days to Ship Scheduled' datatype='integer' name='[Calculation_6861103170623145]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE  [Ship Mode]&#13;&#10;WHEN &quot;Same Day&quot; THEN 0&#13;&#10;WHEN &quot;First Class&quot; THEN 1&#13;&#10;WHEN &quot;Second Class&quot; THEN 3&#13;&#10;WHEN &quot;Standard Class&quot; THEN 6&#13;&#10;END' />
      </column>
      <column caption='2013 sales' datatype='real' default-format='c&quot;$&quot;#,##0,.0K;(&quot;$&quot;#,##0,.0K)' name='[Calculation_8821129170240873]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if year([Order Date])=2013 then [Sales]&#13;&#10;else NULL end' />
      </column>
      <column caption='Order Profitable?' datatype='boolean' name='[Calculation_9060122104947471]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='{fixed [Order ID]:sum([Profit])}&gt;0&#13;&#10;// calculates the profit at the order level' />
        <aliases>
          <alias key='false' value='Unprofitable' />
          <alias key='true' value='Profitable' />
        </aliases>
        <desc>
          <formatted-text>
            <run>A level of detail expression that calculates profitability for each Order</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Profit per Customer' datatype='real' default-format='C1033%' name='[Calculation_9321103144526191 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Profit])/countD([Customer Name])' />
      </column>
      <column caption='Sales per Customer' datatype='real' default-format='C1033%' name='[Calculation_9321103144526191]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([Sales])/countD([Customer Name])' />
      </column>
      <column caption='Profit Ratio' datatype='real' default-format='p0.0%' name='[Calculation_9921103144103743]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
      </column>
      <column caption='Sales above Target?' datatype='string' name='[Calculation_9951107165644870]' role='measure' type='nominal'>
        <calculation class='tableau' formula='If Sum([Sales])&gt;SUM([dataengine.42019.622799629629].[Sales Target]) then &quot;Above Target&quot; else &quot;Below Target&quot; end' />
        <desc>
          <formatted-text>
            <run>Used with &quot;Sales Target&quot; data source</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
      <column datatype='real' default-format='p0.00%' name='[Discount]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
      <column datatype='real' hidden='true' name='[Order Quantity]' role='measure' type='quantitative' />
      <column datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column caption='Units estimate' datatype='real' default-format='n#,##0;-#,##0' name='[Sales est (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ROUND([Quantity]*(1-[Parameters].[Parameter 2])*(1+[Parameters].[Parameter 1]),0)' scope-isolation='false' />
      </column>
      <column caption='Profit per Order' datatype='real' default-format='C1033%' name='[Sales per Customer (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([Profit])/countD([Order ID])' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
      <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <column-instance column='[Customer Name]' derivation='CountD' name='[ctd:Customer Name:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_6401103171259723]' derivation='None' name='[none:Calculation_6401103171259723:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_9060122104947471]' derivation='None' name='[none:Calculation_9060122104947471:nk]' pivot='key' type='nominal' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Postal Code]' derivation='None' name='[none:Postal Code:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
      <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Sales]' derivation='Sum' name='[rank:sum:Sales:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Calculation_1641214165608856]' derivation='Sum' name='[sum:Calculation_1641214165608856:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5421109230915137]' derivation='Sum' name='[sum:Calculation_5421109230915137:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales est (copy)]' derivation='Sum' name='[sum:Sales est (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Order Date]' derivation='Week-Trunc' name='[twk:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_9951107165644870]' derivation='User' name='[usr:Calculation_9951107165644870:nk]' pivot='key' type='nominal' />
      <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Action (Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category]' />
        </groupfilter>
      </group>
      <group caption='Action (Category,MONTH(Order Date))' hidden='true' name='[Action (Category,MONTH(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category]' />
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Category,YEAR(Order Date),MONTH(Order Date))' hidden='true' name='[Action (Category,YEAR(Order Date),MONTH(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category]' />
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country / Region]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Country,YEAR(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country / Region]' />
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Customer Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Segment:nk]' />
        </groupfilter>
      </group>
      <group caption='Action (Delayed?)' hidden='true' name='[Action (Delayed?)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_6401103171259723]' />
        </groupfilter>
      </group>
      <group caption='Action (Delayed?,YEAR(Order Date),MONTH(Order Date),Ship Mode)' hidden='true' name='[Action (Delayed?,YEAR(Order Date),MONTH(Order Date),Ship Mode)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_6401103171259723]' />
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Ship Mode:nk]' />
        </groupfilter>
      </group>
      <group caption='Action (Delayed?,YEAR(Order Date),WEEK(Order Date))' hidden='true' name='[Action (Delayed?,YEAR(Order Date),WEEK(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_6401103171259723]' />
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[twk:Order Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Delayed?,YEAR(Order Date),WEEK(Order Date),Ship Mode)' hidden='true' name='[Action (Delayed?,YEAR(Order Date),WEEK(Order Date),Ship Mode)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_6401103171259723]' />
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[twk:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Ship Mode:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Department,Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Department]' />
          <groupfilter function='level-members' level='[Category]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Order Date),Product Category)' hidden='true' name='[Action (MONTH(Order Date),Product Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Category:nk]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Order Date),Product Category,ProductSub-Category)' hidden='true' name='[Action (MONTH(Order Date),Product Category,ProductSub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Category:nk]' />
          <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Order Date),Product Category,Segment) 1' hidden='true' name='[Action (MONTH(Order Date),Product Category,Segment) 1]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Category:nk]' />
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Order Date),Product Category,Segment)' hidden='true' name='[Action (MONTH(Order Date),Product Category,Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Category:nk]' />
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Order Date),ProductSub-Category)' hidden='true' name='[Action (MONTH(Order Date),ProductSub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Order Date),Segment)' hidden='true' name='[Action (MONTH(Order Date),Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (Order Profitable?,Category,MONTH(Order Date))' hidden='true' name='[Action (Order Profitable?,Category,MONTH(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_9060122104947471]' />
          <groupfilter function='level-members' level='[Category]' />
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Order Profitable?,MONTH(Order Date),Segment)' hidden='true' name='[Action (Order Profitable?,MONTH(Order Date),Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_9060122104947471]' />
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (Postal Code,State) 1' hidden='true' name='[Action (Postal Code,State) 1]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Postal Code]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (Postal Code,State)' hidden='true' name='[Action (Postal Code,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Postal Code:ok]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (Product Category,ProductSub-Category,Segment)' hidden='true' name='[Action (Product Category,ProductSub-Category,Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Category:nk]' />
          <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (ProductSub-Category,Region,Segment)' hidden='true' name='[Action (ProductSub-Category,Region,Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
          <groupfilter function='level-members' level='[Region]' />
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (ProductSub-Category,State)' hidden='true' name='[Action (ProductSub-Category,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (QUARTER(Order Date),MONTH(Order Date),Product Category,ProductSub-Category)' hidden='true' name='[Action (QUARTER(Order Date),MONTH(Order Date),Product Category,ProductSub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[qr:Order Date:ok]' />
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Category:nk]' />
          <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
        </groupfilter>
      </group>
      <group caption='Action (QUARTER(Order Date),MONTH(Order Date),ProductSub-Category)' hidden='true' name='[Action (QUARTER(Order Date),MONTH(Order Date),ProductSub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[qr:Order Date:ok]' />
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
        </groupfilter>
      </group>
      <group caption='Action (Region)' hidden='true' name='[Action (Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group caption='Action (Segment)' hidden='true' name='[Action (Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (Ship Status)' hidden='true' name='[Action (Ship Status)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_6401103171259723]' />
        </groupfilter>
      </group>
      <group caption='Action (Ship Status,Customer Name,Order Date,Order ID,Product Name,Ship Mode)' hidden='true' name='[Action (Ship Status,Customer Name,Order Date,Order ID,Product Name,Ship Mode)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_6401103171259723]' />
          <groupfilter function='level-members' level='[Customer Name]' />
          <groupfilter function='level-members' level='[Order Date]' />
          <groupfilter function='level-members' level='[Order ID]' />
          <groupfilter function='level-members' level='[Product Name]' />
          <groupfilter function='level-members' level='[Ship Mode]' />
        </groupfilter>
      </group>
      <group caption='Action (Ship Status,YEAR(Order Date),WEEK(Order Date))' hidden='true' name='[Action (Ship Status,YEAR(Order Date),WEEK(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_6401103171259723]' />
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[twk:Order Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (Transaction Profit,MONTH(Order Date),Segment)' hidden='true' name='[Action (Transaction Profit,MONTH(Order Date),Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_9060122104947471]' />
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Order Date),MONTH(Order Date))' hidden='true' name='[Action (YEAR(Order Date),MONTH(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Order Date),MONTH(Order Date),Product Category)' hidden='true' name='[Action (YEAR(Order Date),MONTH(Order Date),Product Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Category:nk]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Order Date),MONTH(Order Date),Region)' hidden='true' name='[Action (YEAR(Order Date),MONTH(Order Date),Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Order Date),MONTH(Order Date),Segment)' hidden='true' name='[Action (YEAR(Order Date),MONTH(Order Date),Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Order Date),MONTH(Order Date),Ship Mode)' hidden='true' name='[Action (YEAR(Order Date),MONTH(Order Date),Ship Mode)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Ship Mode:nk]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Order Date),QUARTER(Order Date),MONTH(Order Date),Region)' hidden='true' name='[Action (YEAR(Order Date),QUARTER(Order Date),MONTH(Order Date),Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[qr:Order Date:ok]' />
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Order Date),WEEK(Order Date),Ship Mode)' hidden='true' name='[Action (YEAR(Order Date),WEEK(Order Date),Ship Mode)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[twk:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Ship Mode:nk]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Location'>
          <field>[Country]</field>
          <field>[State]</field>
          <field>[City]</field>
          <field>[Postal Code]</field>
        </drill-path>
        <drill-path name='Product'>
          <field>[Category]</field>
          <field>[Sub-Category]</field>
          <field>[Product Name]</field>
        </drill-path>
      </drill-paths>
      <folder name='Customer' role='dimensions'>
        <folder-item name='[Customer Name]' type='field' />
        <folder-item name='[Segment]' type='field' />
      </folder>
      <folder name='Order' role='dimensions'>
        <folder-item name='[Order Date]' type='field' />
        <folder-item name='[Order ID]' type='field' />
        <folder-item name='[Ship Date]' type='field' />
        <folder-item name='[Ship Mode]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.41958' measure-ordering='alphabetic' measure-percentage='0.393357' parameter-percentage='0.187063' show-aliased-fields='true' show-structure='false' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Calculation_9921103144103743]' max='0.5' min='-0.5' palette='tableau-orange-blue' type='interpolated' />
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Estimate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_6401103171259723:nk]' palette='tableau10_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Shipped Early&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Shipped Late&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Shipped On Time&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_9060122104947471:nk]' type='palette'>
            <map to='#6388b4'>
              <bucket>true</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_9951107165644870:nk]' palette='nuriel_stone_10_0' type='palette'>
            <map to='#027b8e'>
              <bucket>&quot;Above Target&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Below Target&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Segment:nk]&#10;[none:Forecast Indicator:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Consumer&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Home Office&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Corporate&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#000000'>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#1c70ae'>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Calculation_5421109230915137:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[dataengine.42019.618651678240].[usr:Calculation_9330126204734562:qk]&quot;</bucket>
            </map>
            <map to='#414451'>
              <bucket>&quot;[dataengine.42019.618651678240].[rank:sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Calculation_1641214165608856:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Sales est (copy):qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column caption='New Business Growth' datatype='real' default-format='p0%' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.59999999999999998'>
          <calculation class='tableau' formula='0.59999999999999998' />
          <range granularity='0.01' max='1.0' min='0.0' />
        </column>
        <column caption='Churn Rate' datatype='real' default-format='p0.00%' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0.064000000000000001'>
          <calculation class='tableau' formula='0.064000000000000001' />
          <range granularity='0.001' max='0.25' min='0.0' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='dataengine.42019.622799629629'>
        <column datatype='integer' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales Target]' role='measure' type='quantitative' />
      </datasource-dependencies>
    </datasource>
    <datasource caption='Sales Target' inline='true' name='dataengine.42019.622799629629' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sales Target' name='dataengine.42019.622799629629leaf'>
            <connection class='dataengine' dbname='Data/en_US-US/Sales Target.tde' password='' schema='Extract' tablename='Extract' workgroup-auth-mode='as-is'>
              <calculations>
                <calculation column='[Number of Records]' formula='1' />
              </calculations>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='dataengine.42019.622799629629leaf' name='Extract' table='[Extract].[Extract]' type='table' />
        <calculations>
          <calculation column='[Number of Records]' formula='1' />
        </calculations>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>0</ordinal>
            <family>Sheet1</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Furniture&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Technology&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>4603</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Records</remote-name>
            <remote-type>16</remote-type>
            <local-name>[Number of Records]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Number of Records</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>4603.0</statistic>
              <statistic aggregation='Avg' datatype='real'>1.0</statistic>
              <statistic aggregation='Min' datatype='integer'>1</statistic>
              <statistic aggregation='Max' datatype='integer'>1</statistic>
              <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
              <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
              <statistic aggregation='Var' datatype='real'>0.0</statistic>
              <statistic aggregation='VarP' datatype='real'>0.0</statistic>
              <statistic aggregation='Count' datatype='integer'>4603</statistic>
              <statistic aggregation='Median' datatype='integer'>1</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>4603.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <family>Sheet1</family>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <approx-count>1237</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='date'>#2013-01-03#</statistic>
              <statistic aggregation='Max' datatype='date'>#2016-12-30#</statistic>
              <statistic aggregation='Count' datatype='integer'>4603</statistic>
              <statistic aggregation='Median' datatype='date'>#2015-05-03#</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales Target</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Sales Target]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Sales Target</remote-alias>
            <ordinal>3</ordinal>
            <family>Sheet1</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1342</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>2240401.0</statistic>
              <statistic aggregation='Avg' datatype='real'>486.72626547903542</statistic>
              <statistic aggregation='Min' datatype='integer'>1</statistic>
              <statistic aggregation='Max' datatype='integer'>25729</statistic>
              <statistic aggregation='Stdev' datatype='real'>985.11439154410641</statistic>
              <statistic aggregation='StdevP' datatype='real'>985.00737786810294</statistic>
              <statistic aggregation='Var' datatype='real'>970450.36442731495</statistic>
              <statistic aggregation='VarP' datatype='real'>970239.53445459565</statistic>
              <statistic aggregation='Count' datatype='integer'>4603</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>5556474589.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>4</ordinal>
            <family>Sheet1</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Consumer&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Home Office&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>4603</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales Target]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.309441' measure-ordering='alphabetic' measure-percentage='0.267483' parameter-percentage='0.423077' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sales Commission' inline='true' name='Sales Planning new' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sales Commission' name='Sales Planning newleaf'>
            <connection class='dataengine' dbname='Data/Extracts/Sales Planning new.tde' schema='Extract' server-oauth='' tablename='Extract' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='Sales Planning newleaf' name='Extract' table='[Extract].[Extract]' type='table' />
        <calculations>
          <calculation column='[Number of Records]' formula='1' />
        </calculations>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Number of Records</remote-name>
            <remote-type>16</remote-type>
            <local-name>[Number of Records]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Number of Records</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='integer'>1</statistic>
              <statistic aggregation='Max' datatype='integer'>1</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>1</ordinal>
            <family>DATA$</family>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <approx-count>1</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='datetime'>#2002-01-01 00:00:00#</statistic>
              <statistic aggregation='Max' datatype='datetime'>#2002-01-01 00:00:00#</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>2</ordinal>
            <family>DATA$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Central&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;West&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales Person</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sales Person]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Sales Person</remote-alias>
            <ordinal>3</ordinal>
            <family>DATA$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>41</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Barbara Davis&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;William Taylor&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>4</ordinal>
            <family>DATA$</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>43</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>10297.020000000002</statistic>
              <statistic aggregation='Max' datatype='real'>1144600.6499999994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Achievement (estimated)' datatype='real' default-format='C1033%' name='[Achievement (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Sales]' scope-isolation='false' />
      </column>
      <column caption='Achieved Quota' datatype='string' name='[Achievement (variable) (copy)]' role='measure' type='nominal'>
        <calculation class='tableau' formula='if SUM([Achievement (copy)]) &gt;= [Parameters].[New Quota] then &quot;100% +&quot;&#13;&#10;elseif SUM([Achievement (copy)]) &gt;= 0.75 * [Parameters].[New Quota] then &quot;75-100%&quot;&#13;&#10;elseif SUM([Achievement (copy)]) &gt;= 0.5 * [Parameters].[New Quota] then &quot;50-75%&quot;&#13;&#10;else &quot;Below 50%&quot; end' />
      </column>
      <column datatype='integer' default-format='C1033%' name='[Base (Variable)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Parameters].[Base Salary]' />
      </column>
      <column caption='% of quota achieved' datatype='real' default-format='p0%' name='[Calculation_0440925131659539]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([Achievement (copy)])/[Parameters].[New Quota]' scope-isolation='false' />
      </column>
      <column caption='Rank over 3' datatype='real' name='[Calculation_4120925132203686]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ROUND(INDEX() / 3 - 0.6,0) + 1'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Sort by field' datatype='real' name='[Calculation_8140925133029303]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='if [Parameters].[Parameter 1 1]=&quot;Names&quot; then 0&#13;&#10;elseif [Parameters].[Parameter 1 1]=&quot;% quota descending&quot; then -[Calculation_0440925131659539]&#13;&#10;else [Calculation_0440925131659539] end' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Commission (Variable)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Parameters].[Commission Rate]*[Sales])/100' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Estimate Compensation label]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;Estimated Compensation:&quot;' />
        <aliases>
          <alias key='&quot;Estimated Compensation:&quot;' value='Estimated total compensation' />
        </aliases>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec' />
      <column datatype='real' default-format='C1033%' name='[OTE (Variable)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Parameters].[Base Salary] + ([Parameters].[Commission Rate]*[Parameters].[New Quota])/100' />
      </column>
      <column datatype='datetime' name='[Order Date]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='real' default-format='n#,##0;-#,##0' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='real' default-format='C1033%' name='[Total Compensation]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MIN([Base (Variable)]) + SUM([Commission (Variable)])' />
      </column>
      <column datatype='string' name='[Total Sales label]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;Total Sales:&quot;' />
        <aliases>
          <alias key='&quot;Total Sales:&quot;' value='Total' />
        </aliases>
      </column>
      <column-instance column='[Base (Variable)]' derivation='Min' name='[min:Base (Variable):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Commission (Variable)]' derivation='Sum' name='[sum:Commission (Variable):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Order Date]' derivation='Week-Trunc' name='[twk:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Achievement (variable) (copy)]' derivation='User' name='[usr:Achievement (variable) (copy):nk]' pivot='key' type='nominal' />
      <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Action (Call Center)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Order Date))' hidden='true' name='[Action (MONTH(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Next Button)' hidden='true' name='[Action (Next Button)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_2310128142449424]' />
        </groupfilter>
      </group>
      <group caption='Action (Previous Button)' hidden='true' name='[Action (Previous Button)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Next (copy)]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Order Date),MONTH(Order Date))' hidden='true' name='[Action (YEAR(Order Date),MONTH(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Order Date),WEEK(Order Date))' hidden='true' name='[Action (YEAR(Order Date),WEEK(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[twk:Order Date:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.372984' measure-ordering='alphabetic' measure-percentage='0.332661' parameter-percentage='0.294355' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#5f9ed1'>
              <bucket>&quot;[Sales Planning new].[sum:Commission (Variable):qk]&quot;</bucket>
            </map>
            <map to='#898989'>
              <bucket>&quot;[Sales Planning new].[min:Base (Variable):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Achievement (variable) (copy):nk]' palette='tableau10_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;50-75\%&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Below 50\%&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;100\% +&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;75-100\%&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Base Salary' datatype='integer' name='[Base Salary]' param-domain-type='range' role='measure' type='quantitative' value='50000'>
          <calculation class='tableau' formula='50000' />
          <range granularity='1000' min='0' />
        </column>
        <column caption='Commission Rate' datatype='real' default-format='n#,##0.0&quot;%&quot;;-#,##0.0&quot;%&quot;' name='[Commission Rate]' param-domain-type='range' role='measure' type='quantitative' value='18.400000000000002'>
          <calculation class='tableau' formula='18.400000000000002' />
          <range granularity='0.10000000000000001' max='100.0' min='1.0' />
        </column>
        <column caption='New Quota' datatype='integer' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[New Quota]' param-domain-type='range' role='measure' type='quantitative' value='500000'>
          <calculation class='tableau' formula='500000' />
          <range granularity='25000' min='100000' />
        </column>
        <column caption='Sort by' datatype='string' name='[Parameter 1 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Names&quot;'>
          <calculation class='tableau' formula='&quot;Names&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='dataengine.42019.618651678240'>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
      <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
      <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Order Date]' derivation='Year-Trunc' name='[tyr:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='dataengine.42019.622799629629'>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
      <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
      <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Order Date]' derivation='Year-Trunc' name='[tyr:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
    </datasource-dependencies>
    <datasource-relationship source='dataengine.42019.618651678240' target='dataengine.42019.622799629629'>
      <column-mapping>
        <map key='[dataengine.42019.618651678240].[mn:Order Date:ok]' value='[dataengine.42019.622799629629].[mn:Order Date:ok]' />
        <map key='[dataengine.42019.618651678240].[none:Category:nk]' value='[dataengine.42019.622799629629].[none:Category:nk]' />
        <map key='[dataengine.42019.618651678240].[none:Segment:nk]' value='[dataengine.42019.622799629629].[none:Segment:nk]' />
        <map key='[dataengine.42019.618651678240].[tmn:Order Date:ok]' value='[dataengine.42019.622799629629].[tmn:Order Date:ok]' />
        <map key='[dataengine.42019.618651678240].[tyr:Order Date:ok]' value='[dataengine.42019.622799629629].[tyr:Order Date:ok]' />
        <map key='[dataengine.42019.618651678240].[yr:Order Date:ok]' value='[dataengine.42019.622799629629].[yr:Order Date:ok]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight Customer Name (Hover)' name='[Action10]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Customers' type='sheet'>
        <exclude-sheet name='CustomerOverview' />
      </source>
      <command command='tsc:brush'>
        <param name='exclude' value='CustomerOverview' />
        <param name='field-captions' value='Customer Name' />
        <param name='target' value='Customers' />
      </command>
    </action>
    <action caption='Highlight 3 (generated)' name='[Action13]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Commission Model' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Sales Person' />
        <param name='target' value='Commission Model' />
      </command>
    </action>
    <action caption='State Filter' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview' type='sheet' worksheet='Sale Map' />
      <link caption='State Filter' delimiter=',' escape='\' expression='tsl:Overview?%5Bdataengine.42019.618651678240%5D.%5BState%5D~s0=&lt;[State]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Sale Map' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Filter Details' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Shipping' type='sheet' worksheet='ShippingTrend' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='ShipSummary' />
        <param name='special-fields' value='all' />
        <param name='target' value='Shipping' />
      </command>
    </action>
    <action caption='Filter Product Sales' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Product' type='sheet' worksheet='ProductView' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Product' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Shipping' type='sheet' worksheet='ShipSummary' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Shipping' />
      </command>
    </action>
    <action caption='Month Highlight' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview' type='sheet'>
        <exclude-sheet name='Sale Map' />
      </source>
      <command command='tsc:brush'>
        <param name='exclude' value='Sale Map' />
        <param name='field-captions' value='MONTH(Order Date)' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='State Highlight (map)' name='[Action7]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview' type='sheet'>
        <exclude-sheet name='Sales by Product' />
        <exclude-sheet name='Sales by Segment' />
      </source>
      <command command='tsc:brush'>
        <param name='exclude' value='Sales by Product,Sales by Segment' />
        <param name='field-captions' value='State' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Filter Region' name='[Action8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Customers' type='sheet' worksheet='CustomerOverview' />
      <link caption='Filter Region' delimiter=',' escape='\' expression='tsl:Customers?%5Bdataengine.42019.618651678240%5D.%5BRegion%5D~s0=&lt;[Region]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='CustomerOverview' />
        <param name='target' value='Customers' />
      </command>
    </action>
    <action caption='Highlight 1 (generated)' name='[Action9]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Customers' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='AdhocCluster:1,Clusters,AdhocCluster:2,Customer Segments' />
        <param name='target' value='Customers' />
      </command>
    </action>
    <datasources>
      <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
    </datasources>
    <datasource-dependencies datasource='dataengine.42019.618651678240'>
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='CommissionProjection'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='13'>Total Compensation with These Assumptions</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sales Commission' name='Sales Planning new' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Base Salary' datatype='integer' name='[Base Salary]' param-domain-type='range' role='measure' type='quantitative' value='50000'>
              <calculation class='tableau' formula='50000' />
              <range granularity='1000' min='0' />
            </column>
            <column caption='Commission Rate' datatype='real' default-format='n#,##0.0&quot;%&quot;;-#,##0.0&quot;%&quot;' name='[Commission Rate]' param-domain-type='range' role='measure' type='quantitative' value='18.400000000000002'>
              <calculation class='tableau' formula='18.400000000000002' />
              <range granularity='0.10000000000000001' max='100.0' min='1.0' />
            </column>
            <column caption='New Quota' datatype='integer' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[New Quota]' param-domain-type='range' role='measure' type='quantitative' value='500000'>
              <calculation class='tableau' formula='500000' />
              <range granularity='25000' min='100000' />
            </column>
            <column caption='Sort by' datatype='string' name='[Parameter 1 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Names&quot;'>
              <calculation class='tableau' formula='&quot;Names&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='Sales Planning new'>
            <column caption='Achievement (estimated)' datatype='real' default-format='C1033%' name='[Achievement (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Sales]' scope-isolation='false' />
            </column>
            <column caption='Achieved Quota' datatype='string' name='[Achievement (variable) (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if SUM([Achievement (copy)]) &gt;= [Parameters].[New Quota] then &quot;100% +&quot;&#13;&#10;elseif SUM([Achievement (copy)]) &gt;= 0.75 * [Parameters].[New Quota] then &quot;75-100%&quot;&#13;&#10;elseif SUM([Achievement (copy)]) &gt;= 0.5 * [Parameters].[New Quota] then &quot;50-75%&quot;&#13;&#10;else &quot;Below 50%&quot; end' />
            </column>
            <column datatype='integer' default-format='C1033%' name='[Base (Variable)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Parameters].[Base Salary]' />
            </column>
            <column caption='% of quota achieved' datatype='real' default-format='p0%' name='[Calculation_0440925131659539]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Achievement (copy)])/[Parameters].[New Quota]' scope-isolation='false' />
            </column>
            <column caption='Rank over 3' datatype='real' name='[Calculation_4120925132203686]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ROUND(INDEX() / 3 - 0.6,0) + 1'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Sort by field' datatype='real' name='[Calculation_8140925133029303]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='if [Parameters].[Parameter 1 1]=&quot;Names&quot; then 0&#13;&#10;elseif [Parameters].[Parameter 1 1]=&quot;% quota descending&quot; then -[Calculation_0440925131659539]&#13;&#10;else [Calculation_0440925131659539] end' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Commission (Variable)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Parameters].[Commission Rate]*[Sales])/100' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='C1033%' name='[OTE (Variable)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Parameters].[Base Salary] + ([Parameters].[Commission Rate]*[Parameters].[New Quota])/100' />
            </column>
            <column datatype='string' name='[Sales Person]' role='dimension' type='nominal' />
            <column datatype='real' default-format='n#,##0;-#,##0' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='real' default-format='C1033%' name='[Total Compensation]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MIN([Base (Variable)]) + SUM([Commission (Variable)])' />
            </column>
            <column-instance column='[OTE (Variable)]' derivation='Max' name='[max:OTE (Variable):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Base (Variable)]' derivation='Min' name='[min:Base (Variable):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales Person]' derivation='None' name='[none:Sales Person:nk]' pivot='key' type='nominal' />
            <column-instance column='[Achievement (copy)]' derivation='Sum' name='[sum:Achievement (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Base (Variable)]' derivation='Sum' name='[sum:Base (Variable):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Commission (Variable)]' derivation='Sum' name='[sum:Commission (Variable):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Achievement (variable) (copy)]' derivation='User' name='[usr:Achievement (variable) (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4120925132203686]' derivation='User' name='[usr:Calculation_4120925132203686:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_8140925133029303]' derivation='User' name='[usr:Calculation_8140925133029303:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Total Compensation]' derivation='User' name='[usr:Total Compensation:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[Sales Planning new].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sales Planning new].[sum:Commission (Variable):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sales Planning new].[min:Base (Variable):qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[Sales Planning new].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[Sales Planning new].[sum:Commission (Variable):qk]&quot;</bucket>
              <bucket>&quot;[Sales Planning new].[sum:Base (Variable):qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='computed' column='[Sales Planning new].[none:Sales Person:nk]' direction='ASC' using='[Sales Planning new].[usr:Calculation_8140925133029303:ok]' />
          <sort class='manual' column='[Sales Planning new].[usr:Achievement (variable) (copy):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Below 50\%&quot;</bucket>
              <bucket>&quot;50-75\%&quot;</bucket>
              <bucket>&quot;75-100\%&quot;</bucket>
              <bucket>&quot;100\% +&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[Sales Planning new].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[Sales Planning new].[Multiple Values]' scope='cols' value='Compensation ($)' />
            <format attr='subtitle' class='0' field='[Sales Planning new].[Multiple Values]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[Sales Planning new].[Multiple Values]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[Sales Planning new].[none:Sales Person:nk]' value='136' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[Sales Planning new].[usr:Calculation_4120925132203686:ok]' value='false' />
            <format attr='text-format' field='[Sales Planning new].[sum:Achievement (copy):qk]' value='n#,##0,K;-#,##0,K' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline2' value='#acacac' />
            <format attr='color' id='refline2' value='#000000' />
            <format attr='color' id='refline3' value='#000000' />
            <format attr='stroke-color' id='refline4' value='#acacac' />
            <format attr='color' id='refline4' value='#000000' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
            <format attr='col-width' field='[Sales Planning new].[:Measure Names]' value='240' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[Sales Planning new].[:Measure Names]' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Sales Planning new].[:Measure Names]' />
              <lod column='[Sales Planning new].[sum:Achievement (copy):qk]' />
              <lod column='[Sales Planning new].[usr:Total Compensation:qk]' />
              <lod column='[Sales Planning new].[max:OTE (Variable):qk]' />
              <lod column='[Sales Planning new].[usr:Total Compensation:qk]' />
              <lod column='[Sales Planning new].[usr:Achievement (variable) (copy):nk]' />
            </encodings>
            <reference-line axis-column='[Sales Planning new].[Multiple Values]' enable-instant-analytics='false' formula='max' id='refline2' label='OTE &lt;Value&gt;' label-type='custom' scope='per-table' value-column='[Sales Planning new].[max:OTE (Variable):qk]' z-order='1' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#d3872a' fontname='Tableau Bold' fontsize='11'>&lt;[Sales Planning new].[none:Sales Person:nk]&gt;</run>
                <run fontcolor='#666666' fontname='Tableau Medium' fontsize='9'>&#10;&lt;[Sales Planning new].[usr:Achievement (variable) (copy):nk]&gt; Quota Achieved</run>
                <run fontcolor='#000000' fontsize='9'>Æ </run>
                <run fontcolor='#666666' fontsize='9'>&#10;Total Sales: </run>
                <run fontcolor='#000000' fontsize='9'>Æ        </run>
                <run fontcolor='#000000' fontname='Tableau Semibold' fontsize='9'>&lt;[Sales Planning new].[sum:Achievement (copy):qk]&gt;</run>
                <run fontcolor='#555555' fontsize='9'>&#10;Compensation:</run>
                <run fontcolor='#000000' fontsize='9'>Æ </run>
                <run fontcolor='#000000' fontname='Tableau Semibold' fontsize='9'>&lt;[Sales Planning new].[usr:Total Compensation:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2537499666213989' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([Sales Planning new].[usr:Calculation_4120925132203686:ok] / [Sales Planning new].[none:Sales Person:nk])</rows>
        <cols>[Sales Planning new].[Multiple Values]</cols>
      </table>
    </worksheet>
    <worksheet name='CustomerOverview'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column caption='Days to Ship Actual' datatype='integer' name='[Calculation_0831103151444568]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;,[Order Date],[Ship Date])' />
            </column>
            <column caption='Days to Ship Scheduled' datatype='integer' name='[Calculation_6861103170623145]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE  [Ship Mode]&#13;&#10;WHEN &quot;Same Day&quot; THEN 0&#13;&#10;WHEN &quot;First Class&quot; THEN 1&#13;&#10;WHEN &quot;Second Class&quot; THEN 3&#13;&#10;WHEN &quot;Standard Class&quot; THEN 6&#13;&#10;END' />
            </column>
            <column caption='Sales per Customer' datatype='real' default-format='C1033%' name='[Calculation_9321103144526191]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Sales])/countD([Customer Name])' />
            </column>
            <column caption='Profit Ratio' datatype='real' default-format='p0.0%' name='[Calculation_9921103144103743]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Customer Name]' derivation='CountD' name='[ctd:Customer Name:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_0831103151444568]' derivation='Sum' name='[sum:Calculation_0831103151444568:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6861103170623145]' derivation='Sum' name='[sum:Calculation_6861103170623145:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9321103144526191]' derivation='User' name='[usr:Calculation_9321103144526191:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9921103144103743]' derivation='User' name='[usr:Calculation_9921103144103743:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[ctd:Customer Name:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[sum:Sales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[sum:Quantity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[usr:Calculation_9321103144526191:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[dataengine.42019.618651678240].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Calculation_0831103151444568:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Calculation_6861103170623145:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[ctd:Customer Name:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Sales:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Quantity:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[usr:Calculation_9321103144526191:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Profit:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Category:nk]' filter-group='10'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[dataengine.42019.618651678240].[none:Region:nk]' direction='DESC' using='[dataengine.42019.618651678240].[ctd:Customer Name:qk]' />
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Segment:nk]' filter-group='12'>
            <groupfilter function='level-members' level='[none:Segment:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[qr:Order Date:ok]'>
            <groupfilter from='1' function='range' level='[qr:Order Date:ok]' to='4' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[yr:Order Date:ok]' filter-group='9'>
            <groupfilter function='level-members' level='[yr:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[yr:Order Date:ok]</column>
            <column>[dataengine.42019.618651678240].[qr:Order Date:ok]</column>
            <column>[dataengine.42019.618651678240].[none:Segment:nk]</column>
            <column>[dataengine.42019.618651678240].[none:Category:nk]</column>
            <column>[dataengine.42019.618651678240].[:Measure Names]</column>
            <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[dataengine.42019.618651678240].[ctd:Customer Name:qk]' value='22' />
            <format attr='height' field='[dataengine.42019.618651678240].[sum:Profit:qk]' value='22' />
            <format attr='height' field='[dataengine.42019.618651678240].[sum:Quantity:qk]' value='22' />
            <format attr='height' field='[dataengine.42019.618651678240].[sum:Sales:qk]' value='22' />
            <format attr='height' field='[dataengine.42019.618651678240].[usr:Calculation_9321103144526191:qk]' value='22' />
            <format attr='height' field='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' value='22' />
            <format attr='display' class='0' field='[dataengine.42019.618651678240].[Multiple Values]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[dataengine.42019.618651678240].[none:Region:nk]' value='23' />
            <format attr='text-align' value='center' />
            <format attr='text-format' field='[dataengine.42019.618651678240].[sum:Quantity:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[dataengine.42019.618651678240].[usr:Calculation_9321103144526191:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[dataengine.42019.618651678240].[none:Region:nk]' value='60' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[dataengine.42019.618651678240].[:Measure Names]' value='left' />
            <format attr='font-size' field='[dataengine.42019.618651678240].[:Measure Names]' value='9' />
            <format attr='font-family' field='[dataengine.42019.618651678240].[:Measure Names]' value='Tableau Regular' />
            <format attr='font-weight' field='[dataengine.42019.618651678240].[:Measure Names]' value='bold' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[dataengine.42019.618651678240].[sum:Profit:qk]' max='200000.0' min='0.0' num-steps='2' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#9c0824</color>
                <color>#bd1316</color>
                <color>#d11719</color>
                <color>#df513f</color>
                <color>#fc8375</color>
                <color>#cacaca</color>
                <color>#95aebb</color>
                <color>#6795ac</color>
                <color>#3e7d9d</color>
                <color>#1c688d</color>
                <color>#00557f</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' max='0.5' min='-0.5' palette='tableau-orange-blue' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' scope='cols' value='none' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='rows' value='none' />
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[dataengine.42019.618651678240].[yr:Order Date:ok]' value='Year' />
            <format attr='background-color' value='#f7f7f7' />
          </style-rule>
        </style>
        <panes>
          <pane id='7'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[dataengine.42019.618651678240].[ctd:Customer Name:qk]' />
              <lod column='[dataengine.42019.618651678240].[sum:Sales:qk]' />
              <lod column='[dataengine.42019.618651678240].[sum:Quantity:qk]' />
              <lod column='[dataengine.42019.618651678240].[usr:Calculation_9321103144526191:qk]' />
              <lod column='[dataengine.42019.618651678240].[sum:Profit:qk]' />
              <lod column='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#d3872a' fontname='Tableau Bold' fontsize='12'>&lt;[dataengine.42019.618651678240].[none:Region:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Customers:&#9;</run>
                <run fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[ctd:Customer Name:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Sales:&#9;</run>
                <run fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[sum:Sales:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Sales/Customer:&#9;</run>
                <run fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[usr:Calculation_9321103144526191:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Quantity:&#9;</run>
                <run fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[sum:Quantity:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Profit:&#9;</run>
                <run fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[sum:Profit:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Profit Ratio:&#9;</run>
                <run fontcolor='#000000' fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='right' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.5162431001663208' />
                <format attr='mark-color' value='#4a76a1' />
                <format attr='mark-transparency' value='206' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[dataengine.42019.618651678240].[none:Region:nk]</rows>
        <cols>([dataengine.42019.618651678240].[:Measure Names] * [dataengine.42019.618651678240].[Multiple Values])</cols>
      </table>
    </worksheet>
    <worksheet name='CustomerRank'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='14'>Customer Ranking</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column caption='Profit Ratio' datatype='real' default-format='p0.0%' name='[Calculation_9921103144103743]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[rank:sum:Sales:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9921103144103743]' derivation='User' name='[usr:Calculation_9921103144103743:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Region)]'>
            <groupfilter function='level-members' level='[Region]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Category:nk]' filter-group='10'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[dataengine.42019.618651678240].[none:Customer Name:nk]' direction='DESC' using='[dataengine.42019.618651678240].[sum:Sales:qk]' />
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Segment:nk]' filter-group='12'>
            <groupfilter function='level-members' level='[none:Segment:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[yr:Order Date:ok]' filter-group='9'>
            <groupfilter function='level-members' level='[yr:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[Action (Region)]</column>
            <column>[dataengine.42019.618651678240].[yr:Order Date:ok]</column>
            <column>[dataengine.42019.618651678240].[none:Segment:nk]</column>
            <column>[dataengine.42019.618651678240].[none:Category:nk]</column>
            <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' scope='cols' value='#f0f0f0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' max='0.5' min='-0.5' palette='red_black_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='vertical-align' id='refline0' value='top' />
            <format attr='stroke-size' id='refline0' value='1' />
            <format attr='text-align' id='refline0' value='center' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='rows' value='none' />
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' />
              <tooltip column='[dataengine.42019.618651678240].[sum:Profit:qk]' />
              <lod column='[dataengine.42019.618651678240].[rank:sum:Sales:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#d3872a' fontname='Tableau Bold' fontsize='12'>&lt;[dataengine.42019.618651678240].[none:Customer Name:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Sales Rank:&#9;</run>
                <run fontcolor='#353535' fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[rank:sum:Sales:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Sales:&#9;</run>
                <run fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[sum:Sales:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Profit:&#9;</run>
                <run fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[sum:Profit:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Profit Ratio:</run>
                <run fontsize='9'>Æ&#9;</run>
                <run fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[dataengine.42019.618651678240].[none:Customer Name:nk]</rows>
        <cols>[dataengine.42019.618651678240].[sum:Sales:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='CustomerScatter'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='14'>Sales and Profit by Customer</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column caption='Profit Ratio' datatype='real' default-format='p0.0%' name='[Calculation_9921103144103743]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9921103144103743]' derivation='User' name='[usr:Calculation_9921103144103743:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Region)]'>
            <groupfilter function='level-members' level='[Region]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Category:nk]' filter-group='10'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Segment:nk]' filter-group='12'>
            <groupfilter function='level-members' level='[none:Segment:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[yr:Order Date:ok]' filter-group='9'>
            <groupfilter function='level-members' level='[yr:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[Action (Region)]</column>
            <column>[dataengine.42019.618651678240].[yr:Order Date:ok]</column>
            <column>[dataengine.42019.618651678240].[none:Segment:nk]</column>
            <column>[dataengine.42019.618651678240].[none:Category:nk]</column>
            <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[dataengine.42019.618651678240].[sum:Profit:qk]' value='84' />
            <format attr='tick-color' scope='cols' value='#f0f0f0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[dataengine.42019.618651678240].[sum:Profit:qk]' num-steps='2' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#9c0824</color>
                <color>#bd1316</color>
                <color>#d11719</color>
                <color>#df513f</color>
                <color>#fc8375</color>
                <color>#cacaca</color>
                <color>#95aebb</color>
                <color>#6795ac</color>
                <color>#3e7d9d</color>
                <color>#1c688d</color>
                <color>#00557f</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' max='0.5' min='-0.5' palette='red_black_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='1' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern' value='dotted' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='rows' value='none' />
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' />
              <lod column='[dataengine.42019.618651678240].[none:Customer Name:nk]' />
              <lod column='[dataengine.42019.618651678240].[none:Region:nk]' />
              <lod column='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#d3872a' fontname='Tableau Bold' fontsize='12'>&lt;[dataengine.42019.618651678240].[none:Customer Name:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Sales:&#9;</run>
                <run fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[sum:Sales:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Profit:&#9;</run>
                <run fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[sum:Profit:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Profit Ratio:</run>
                <run fontsize='9'>Æ&#9;</run>
                <run fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='size' value='1.1534254550933838' />
                <format attr='mark-transparency' value='198' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='1' />
                <format attr='line-pattern' value='dashed' />
                <format attr='stroke-color' value='#c0c0c0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[dataengine.42019.618651678240].[sum:Profit:qk]</rows>
        <cols>[dataengine.42019.618651678240].[sum:Sales:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='DaystoShip'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Days to Ship by Product for </run>
            <run>&lt;</run>
            <run>[dataengine.42019.618651678240].[qr:Order Date:ok]</run>
            <run>&gt;</run>
            <run> of </run>
            <run>&lt;</run>
            <run>[dataengine.42019.618651678240].[yr:Order Date:ok]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column caption='Days to Ship Actual' datatype='integer' name='[Calculation_0831103151444568]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;,[Order Date],[Ship Date])' />
            </column>
            <column caption='Ship Status' datatype='string' name='[Calculation_6401103171259723]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_0831103151444568]&gt; [Calculation_6861103170623145] then &quot;Shipped Late&quot; &#13;&#10;elseIF [Calculation_0831103151444568]= [Calculation_6861103170623145] then &quot;Shipped On Time&quot;&#13;&#10;Else &quot;Shipped Early&quot; end' />
              <desc>
                <formatted-text>
                  <run>Was shipment early, ontime or late based on ship mode</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Days to Ship Scheduled' datatype='integer' name='[Calculation_6861103170623145]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE  [Ship Mode]&#13;&#10;WHEN &quot;Same Day&quot; THEN 0&#13;&#10;WHEN &quot;First Class&quot; THEN 1&#13;&#10;WHEN &quot;Second Class&quot; THEN 3&#13;&#10;WHEN &quot;Standard Class&quot; THEN 6&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Order Date]' derivation='Min' name='[min:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6401103171259723]' derivation='None' name='[none:Calculation_6401103171259723:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='None' name='[none:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order ID]' derivation='None' name='[none:Order ID:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_0831103151444568]' derivation='Sum' name='[sum:Calculation_0831103151444568:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Week-Trunc' name='[twk:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Delayed?)]'>
            <groupfilter function='level-members' level='[Calculation_6401103171259723]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Ship Status)]'>
            <groupfilter function='level-members' level='[Calculation_6401103171259723]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Ship Status,YEAR(Order Date),WEEK(Order Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_6401103171259723]' />
              <groupfilter function='level-members' level='[yr:Order Date:ok]' />
              <groupfilter function='level-members' level='[twk:Order Date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Calculation_6401103171259723:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[dataengine.42019.618651678240].[none:Customer Name:nk]' direction='ASC' using='[dataengine.42019.618651678240].[min:Order Date:qk]' />
          <sort class='computed' column='[dataengine.42019.618651678240].[none:Product Name:nk]' direction='DESC' using='[dataengine.42019.618651678240].[sum:Calculation_0831103151444568:qk]' />
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Region:nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Ship Mode:nk]' filter-group='11'>
            <groupfilter function='level-members' level='[none:Ship Mode:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[qr:Order Date:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[qr:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[yr:Order Date:ok]' filter-group='18'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2016' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]</column>
            <column>[dataengine.42019.618651678240].[yr:Order Date:ok]</column>
            <column>[dataengine.42019.618651678240].[qr:Order Date:ok]</column>
            <column>[dataengine.42019.618651678240].[none:Ship Mode:nk]</column>
            <column>[dataengine.42019.618651678240].[Action (Delayed?)]</column>
            <column>[dataengine.42019.618651678240].[Action (Ship Status)]</column>
            <column>[dataengine.42019.618651678240].[Action (Ship Status,YEAR(Order Date),WEEK(Order Date))]</column>
            <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[dataengine.42019.618651678240].[none:Order Date:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[dataengine.42019.618651678240].[none:Order Date:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[dataengine.42019.618651678240].[none:Order Date:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[dataengine.42019.618651678240].[none:Order Date:qk]' field-type='quantitative' major-origin='#2014-09-28#' major-spacing='1.0' major-units='weeks' scope='cols' type='space' />
            <format attr='height' field='[dataengine.42019.618651678240].[none:Order Date:qk]' value='37' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[dataengine.42019.618651678240].[none:Product Name:nk]' value='300' />
            <format attr='width' field='[dataengine.42019.618651678240].[none:Customer Name:nk]' value='116' />
            <format attr='width' field='[dataengine.42019.618651678240].[none:Order ID:nk]' value='108' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern' value='solid' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='rows' value='none' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]' />
              <size column='[dataengine.42019.618651678240].[sum:Calculation_0831103151444568:qk]' />
              <lod column='[dataengine.42019.618651678240].[none:Order ID:nk]' />
              <lod column='[dataengine.42019.618651678240].[none:Customer Name:nk]' />
              <lod column='[dataengine.42019.618651678240].[none:Ship Mode:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#666666' fontname='Tableau Bold' fontsize='11'>&lt;[dataengine.42019.618651678240].[none:Ship Mode:nk]&gt;</run>
                <run bold='true' fontcolor='#898989' fontname='Tableau Medium' fontsize='11'>Æ </run>
                <run bold='true' fontcolor='#686868' fontname='Tableau Medium' fontsize='11'>- </run>
                <run fontcolor='#d3872a' fontname='Tableau Bold' fontsize='11'>&lt;[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]&gt;</run>
                <run fontcolor='#666666' fontname='Tableau Medium' fontsize='11'>&#10;&lt;[dataengine.42019.618651678240].[sum:Calculation_0831103151444568:qk]&gt; days to ship</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Product Name:&#9;</run>
                <run fontname='Tableau Medium' fontsize='9'>&lt;[dataengine.42019.618651678240].[none:Product Name:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Customer Name:&#9;</run>
                <run fontname='Tableau Medium' fontsize='9'>&lt;[dataengine.42019.618651678240].[none:Customer Name:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Order Date:&#9;</run>
                <run fontname='Tableau Medium' fontsize='9'>&lt;[dataengine.42019.618651678240].[none:Order Date:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Order ID:&#9;</run>
                <run fontname='Tableau Medium' fontsize='9'>&lt;[dataengine.42019.618651678240].[none:Order ID:nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='206' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[dataengine.42019.618651678240].[none:Product Name:nk]</rows>
        <cols>[dataengine.42019.618651678240].[none:Order Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Forecast'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sales Forecast</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' forecast-column-base='[sum:Sales:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[dataengine.42019.618651678240].[fVal:sum:Sales:qk]' scope='rows' value='' />
            <format attr='subtitle' class='0' field='[dataengine.42019.618651678240].[fVal:sum:Sales:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[dataengine.42019.618651678240].[fVal:sum:Sales:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' scope='cols' value='Order Date' />
            <format attr='subtitle' class='0' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' scope='cols' value='true' />
            <format attr='height' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' value='43' />
            <format attr='width' field='[dataengine.42019.618651678240].[fVal:sum:Sales:qk]' value='76' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[dataengine.42019.618651678240].[none:Segment:nk]' value='28' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[dataengine.42019.618651678240].[none:Segment:nk]' value='true' />
            <format attr='text-orientation' field='[dataengine.42019.618651678240].[none:Segment:nk]' value='-90' />
            <format attr='font-size' field='[dataengine.42019.618651678240].[none:Segment:nk]' value='10' />
            <format attr='text-orientation' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' value='0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-pattern' scope='cols' value='none' />
            <format attr='line-pattern' scope='rows' value='none' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[dataengine.42019.618651678240].[none:Segment:nk]' />
              <color column='[dataengine.42019.618651678240].[none:Forecast Indicator:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#d3872a' fontname='Tableau Bold' fontsize='12'>&lt;[dataengine.42019.618651678240].[none:Forecast Indicator:nk]&gt; Sales</run>
                <run fontcolor='#555555' fontname='Tableau Medium'>&#10;&lt;[dataengine.42019.618651678240].[none:Segment:nk]&gt;, &lt;[dataengine.42019.618651678240].[tmn:Order Date:qk]&gt;&#10;Sales:</run>
                <run fontcolor='#555555'>Æ </run>
                <run fontname='Tableau Bold'>&lt;[dataengine.42019.618651678240].[fVal:sum:Sales:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='244' />
                <format attr='maxheight' value='244' />
                <format attr='minwidth' value='1483' />
                <format attr='maxwidth' value='1483' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([dataengine.42019.618651678240].[none:Segment:nk] * [dataengine.42019.618651678240].[fVal:sum:Sales:qk])</rows>
        <cols>[dataengine.42019.618651678240].[tmn:Order Date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-zero' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
    </worksheet>
    <worksheet name='OTE'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='0' fontcolor='#906800'>Estimated Compensation:</run>
            <run bold='true' fontalignment='0'>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sales Commission' name='Sales Planning new' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Base Salary' datatype='integer' name='[Base Salary]' param-domain-type='range' role='measure' type='quantitative' value='50000'>
              <calculation class='tableau' formula='50000' />
              <range granularity='1000' min='0' />
            </column>
            <column caption='Commission Rate' datatype='real' default-format='n#,##0.0&quot;%&quot;;-#,##0.0&quot;%&quot;' name='[Commission Rate]' param-domain-type='range' role='measure' type='quantitative' value='18.400000000000002'>
              <calculation class='tableau' formula='18.400000000000002' />
              <range granularity='0.10000000000000001' max='100.0' min='1.0' />
            </column>
            <column caption='New Quota' datatype='integer' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[New Quota]' param-domain-type='range' role='measure' type='quantitative' value='500000'>
              <calculation class='tableau' formula='500000' />
              <range granularity='25000' min='100000' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='Sales Planning new'>
            <column datatype='real' default-format='C1033%' name='[OTE (Variable)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Parameters].[Base Salary] + ([Parameters].[Commission Rate]*[Parameters].[New Quota])/100' />
            </column>
            <column-instance column='[OTE (Variable)]' derivation='Avg' name='[avg:OTE (Variable):qk]' pivot='key' type='quantitative' />
            <column-instance column='[OTE (Variable)]' derivation='Sum' name='[sum:OTE (Variable):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[Sales Planning new].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sales Planning new].[sum:OTE (Variable):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sales Planning new].[avg:OTE (Variable):qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[Sales Planning new].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[Sales Planning new].[sum:OTE (Variable):qk]&quot;</bucket>
              <bucket>&quot;[Sales Planning new].[avg:OTE (Variable):qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[Sales Planning new].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='173' />
            <format attr='font-weight' field='[Sales Planning new].[sum:OTE (Variable):qk]' value='bold' />
            <format attr='font-size' field='[Sales Planning new].[sum:OTE (Variable):qk]' value='16' />
            <format attr='text-format' field='[Sales Planning new].[sum:OTE (Variable):qk]' value='c&quot;$&quot;#,##0,,.00M;(&quot;$&quot;#,##0,,.00M)' />
            <format attr='font-weight' field='[Sales Planning new].[avg:OTE (Variable):qk]' value='bold' />
            <format attr='font-size' field='[Sales Planning new].[avg:OTE (Variable):qk]' value='16' />
            <format attr='text-format' field='[Sales Planning new].[Multiple Values]' value='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' />
            <format attr='text-format' field='[Sales Planning new].[avg:OTE (Variable):qk]' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
            <format attr='font-weight' field='[Sales Planning new].[Multiple Values]' value='bold' />
            <format attr='font-size' field='[Sales Planning new].[Multiple Values]' value='16' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[Sales Planning new].[:Measure Names]' value='260' />
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='height-header' value='12' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[Sales Planning new].[:Measure Names]' value='#cc721e' />
            <format attr='font-weight' field='[Sales Planning new].[:Measure Names]' value='bold' />
            <format attr='font-size' field='[Sales Planning new].[:Measure Names]' value='12' />
            <format attr='text-align' field='[Sales Planning new].[:Measure Names]' value='right' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' value='false' />
            <format attr='break-on-special' value='false' />
            <format attr='show-null-value-warning' value='false' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='rows' value='none' />
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[Sales Planning new].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Sales Planning new].[:Measure Names]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Performance'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='16'>Sales Performance vs Target</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
            <datasource caption='Sales Target' name='dataengine.42019.622799629629' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column caption='SUM([Sales])-SUM([Sales Target].[Sales Target])' datatype='real' name='[Calculation_5144658905056067585]' role='measure' type='quantitative' user:unnamed='Performance'>
              <calculation class='tableau' formula='SUM([Sales])-SUM([dataengine.42019.622799629629].[Sales Target])' />
            </column>
            <column caption='Sales above Target?' datatype='string' name='[Calculation_9951107165644870]' role='measure' type='nominal'>
              <calculation class='tableau' formula='If Sum([Sales])&gt;SUM([dataengine.42019.622799629629].[Sales Target]) then &quot;Above Target&quot; else &quot;Below Target&quot; end' />
              <desc>
                <formatted-text>
                  <run>Used with &quot;Sales Target&quot; data source</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5144658905056067585]' derivation='User' name='[usr:Calculation_5144658905056067585:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9951107165644870]' derivation='User' name='[usr:Calculation_9951107165644870:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='dataengine.42019.622799629629'>
            <column datatype='integer' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales Target]' role='measure' type='quantitative' />
            <column-instance column='[Sales Target]' derivation='Sum' name='[sum:Sales Target:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[yr:Order Date:ok]'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2016' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[yr:Order Date:ok]</column>
            <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[dataengine.42019.618651678240].[sum:Sales:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[dataengine.42019.618651678240].[sum:Sales:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[dataengine.42019.618651678240].[sum:Sales:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[dataengine.42019.618651678240].[none:Category:nk]' value='20' />
            <format attr='width' field='[dataengine.42019.618651678240].[none:Segment:nk]' value='96' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[dataengine.42019.618651678240].[yr:Order Date:ok]' value='false' />
            <format attr='font-size' field='[dataengine.42019.618651678240].[mn:Order Date:ok]' value='9' />
            <format attr='font-size' field='[dataengine.42019.618651678240].[none:Category:nk]' value='9' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-level' scope='rows' value='0' />
            <format attr='band-size' scope='rows' value='3' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='reverse-palette' id='refline1' value='false' />
            <format attr='palette' id='refline1' value='gray80' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='rows' value='none' />
            <format attr='div-level' scope='cols' value='0' />
            <format attr='line-pattern' scope='cols' value='none' />
            <format attr='div-level' scope='rows' value='0' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[dataengine.42019.618651678240].[usr:Calculation_9951107165644870:nk]' value='Sales above Budget?' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[dataengine.42019.618651678240].[yr:Order Date:ok]' value='Year' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[dataengine.42019.618651678240].[usr:Calculation_9951107165644870:nk]' />
              <lod column='[dataengine.42019.622799629629].[sum:Sales Target:qk]' />
              <lod column='[dataengine.42019.618651678240].[usr:Calculation_5144658905056067585:qk]' />
            </encodings>
            <reference-line axis-column='[dataengine.42019.618651678240].[sum:Sales:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='none' probability='95' scope='per-cell' value-column='[dataengine.42019.622799629629].[sum:Sales Target:qk]' z-order='2' />
            <reference-line axis-column='[dataengine.42019.618651678240].[sum:Sales:qk]' enable-instant-analytics='true' fill-above='false' fill-below='true' formula='average' id='refline1' label-type='none' percentage-bands='true' probability='95' scope='per-cell' symmetric='false' value-column='[dataengine.42019.622799629629].[sum:Sales Target:qk]' z-order='1'>
              <reference-line-value percentage='80' />
            </reference-line>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#d3872a' fontname='Tableau Semibold' fontsize='12'>&lt;[dataengine.42019.618651678240].[usr:Calculation_9951107165644870:nk]&gt;</run>
                <run bold='true' fontcolor='#d3872a' fontname='Tableau Semibold' fontsize='12'> - </run>
                <run fontcolor='#d3872a' fontname='Tableau Semibold' fontsize='12'>&lt;[dataengine.42019.618651678240].[none:Segment:nk]&gt;</run>
                <run bold='true' fontcolor='#d3872a' fontname='Tableau Semibold' fontsize='12'>Æ </run>
                <run fontcolor='#d3872a' fontname='Tableau Semibold' fontsize='12'>&lt;[dataengine.42019.618651678240].[none:Category:nk]&gt;</run>
                <run fontcolor='#666666' fontname='Tableau Medium'>&#10;&lt;[dataengine.42019.618651678240].[mn:Order Date:ok]&gt;</run>
                <run bold='true' fontcolor='#666666' fontname='Tableau Medium'>Æ </run>
                <run fontcolor='#666666' fontname='Tableau Medium'>&lt;[dataengine.42019.618651678240].[yr:Order Date:ok]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Sales:&#9;</run>
                <run fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[sum:Sales:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Sales Target:&#9;</run>
                <run fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.622799629629].[sum:Sales Target:qk]&gt;</run>
                <run fontcolor='#898989' fontsize='9'>&#10;Difference:</run>
                <run bold='true' fontsize='9'>Æ&#9;</run>
                <run fontname='Tableau Bold' fontsize='9'>$&lt;[dataengine.42019.618651678240].[usr:Calculation_5144658905056067585:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([dataengine.42019.618651678240].[yr:Order Date:ok] / ([dataengine.42019.618651678240].[mn:Order Date:ok] / [dataengine.42019.618651678240].[none:Segment:nk]))</rows>
        <cols>([dataengine.42019.618651678240].[none:Category:nk] * [dataengine.42019.618651678240].[sum:Sales:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='ProductDetailSheet'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column caption='Days to Ship Actual' datatype='integer' name='[Calculation_0831103151444568]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;,[Order Date],[Ship Date])' />
            </column>
            <column caption='Days to Ship Scheduled' datatype='integer' name='[Calculation_6861103170623145]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE  [Ship Mode]&#13;&#10;WHEN &quot;Same Day&quot; THEN 0&#13;&#10;WHEN &quot;First Class&quot; THEN 1&#13;&#10;WHEN &quot;Second Class&quot; THEN 3&#13;&#10;WHEN &quot;Standard Class&quot; THEN 6&#13;&#10;END' />
            </column>
            <column caption='Order Profitable?' datatype='boolean' name='[Calculation_9060122104947471]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{fixed [Order ID]:sum([Profit])}&gt;0&#13;&#10;// calculates the profit at the order level' />
              <aliases>
                <alias key='false' value='Unprofitable' />
                <alias key='true' value='Profitable' />
              </aliases>
              <desc>
                <formatted-text>
                  <run>A level of detail expression that calculates profitability for each Order</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Profit Ratio' datatype='real' default-format='p0.0%' name='[Calculation_9921103144103743]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' default-format='p0.00%' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='None' name='[none:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Order Date]' derivation='None' name='[none:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order ID]' derivation='None' name='[none:Order ID:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Date]' derivation='None' name='[none:Ship Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_0831103151444568]' derivation='Sum' name='[sum:Calculation_0831103151444568:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6861103170623145]' derivation='Sum' name='[sum:Calculation_6861103170623145:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_9921103144103743]' derivation='User' name='[usr:Calculation_9921103144103743:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[sum:Sales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[sum:Quantity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[sum:Discount:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[sum:Calculation_6861103170623145:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[sum:Calculation_0831103151444568:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[dataengine.42019.618651678240].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Sales:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Quantity:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Discount:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Profit:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Calculation_6861103170623145:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Calculation_0831103151444568:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Order Profitable?,MONTH(Order Date),Segment)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_9060122104947471]' />
              <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
              <groupfilter function='level-members' level='[Segment]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Postal Code,State) 1]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Postal Code]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Category:nk]'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:City:nk]'>
            <groupfilter from='&quot;Aberdeen&quot;' function='range' level='[none:City:nk]' to='&quot;Yuma&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[dataengine.42019.618651678240].[none:Order Date:qk]' included-values='in-range-or-null'>
            <min>#2013-01-03#</min>
            <max>#2016-12-30#</max>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Segment:nk]'>
            <groupfilter function='level-members' level='[none:Segment:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:State:nk]'>
            <groupfilter function='level-members' level='[none:State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[:Measure Names]</column>
            <column>[dataengine.42019.618651678240].[none:Category:nk]</column>
            <column>[dataengine.42019.618651678240].[none:Segment:nk]</column>
            <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
            <column>[dataengine.42019.618651678240].[none:State:nk]</column>
            <column>[dataengine.42019.618651678240].[none:City:nk]</column>
            <column>[dataengine.42019.618651678240].[Action (Order Profitable?,MONTH(Order Date),Segment)]</column>
            <column>[dataengine.42019.618651678240].[Action (Postal Code,State) 1]</column>
            <column>[dataengine.42019.618651678240].[none:Order Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[dataengine.42019.618651678240].[sum:Discount:qk]' value='p0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[dataengine.42019.618651678240].[none:Order ID:nk]' value='120' />
            <format attr='width' field='[dataengine.42019.618651678240].[none:Ship Mode:nk]' value='116' />
            <format attr='width' field='[dataengine.42019.618651678240].[none:Ship Date:ok]' value='88' />
            <format attr='width' field='[dataengine.42019.618651678240].[none:Order Date:ok]' value='88' />
            <format attr='width' field='[dataengine.42019.618651678240].[none:Customer Name:nk]' value='140' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Tableau Medium' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[dataengine.42019.618651678240].[:Measure Names]' value='#333333' />
            <format attr='font-family' field='[dataengine.42019.618651678240].[:Measure Names]' value='Tableau Medium' />
            <format attr='font-weight' field='[dataengine.42019.618651678240].[:Measure Names]' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[dataengine.42019.618651678240].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#d3872a' fontname='Tableau Bold' fontsize='11'>Customer Name:&#9;&lt;[dataengine.42019.618651678240].[none:Customer Name:nk]&gt;</run>
                <run fontcolor='#555555' fontname='Tableau Semibold' fontsize='9'>&#10;&lt;[dataengine.42019.618651678240].[:Measure Names]&gt;</run>
                <run fontcolor='#555555' fontsize='9'>: </run>
                <run fontcolor='#555555' fontname='Tableau Semibold' fontsize='9'>&lt;[dataengine.42019.618651678240].[Multiple Values]&gt;</run>
                <run fontname='Tableau Semibold' fontsize='9'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Order Date:&#9;</run>
                <run fontname='Tableau Semibold' fontsize='9'>&lt;[dataengine.42019.618651678240].[none:Order Date:ok]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Order ID:&#9;</run>
                <run fontname='Tableau Semibold' fontsize='9'>&lt;[dataengine.42019.618651678240].[none:Order ID:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Ship Date:&#9;</run>
                <run fontname='Tableau Semibold' fontsize='9'>&lt;[dataengine.42019.618651678240].[none:Ship Date:ok]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Ship Mode:&#9;</run>
                <run fontname='Tableau Semibold' fontsize='9'>&lt;[dataengine.42019.618651678240].[none:Ship Mode:nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([dataengine.42019.618651678240].[none:Order ID:nk] / ([dataengine.42019.618651678240].[none:Customer Name:nk] / ([dataengine.42019.618651678240].[none:Order Date:ok] / ([dataengine.42019.618651678240].[none:Ship Date:ok] / [dataengine.42019.618651678240].[none:Ship Mode:nk]))))</rows>
        <cols>[dataengine.42019.618651678240].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='ProductDetails'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='15'>Sales and Profit by Product Names</run>
            <run fontsize='9'>&#10;Year: &lt;[dataengine.42019.618651678240].[yr:Order Date:ok]&gt;, Month: &lt;[dataengine.42019.618651678240].[mn:Order Date:ok]&gt;, Product Category: &lt;[dataengine.42019.618651678240].[none:Category:nk]&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column caption='Profit Ratio' datatype='real' default-format='p0.0%' name='[Calculation_9921103144103743]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9921103144103743]' derivation='User' name='[usr:Calculation_9921103144103743:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Category,YEAR(Order Date),MONTH(Order Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[yr:Order Date:ok]' />
              <groupfilter function='level-members' level='[mn:Order Date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (YEAR(Order Date),MONTH(Order Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Order Date:ok]' />
              <groupfilter function='level-members' level='[mn:Order Date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (YEAR(Order Date),MONTH(Order Date),Product Category)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Order Date:ok]' />
              <groupfilter function='level-members' level='[mn:Order Date:ok]' />
              <groupfilter function='level-members' level='[none:Category:nk]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[mn:Order Date:ok]'>
            <groupfilter function='level-members' level='[mn:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Region:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[yr:Order Date:ok]'>
            <groupfilter function='level-members' level='[yr:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[yr:Order Date:ok]</column>
            <column>[dataengine.42019.618651678240].[mn:Order Date:ok]</column>
            <column>[dataengine.42019.618651678240].[Action (YEAR(Order Date),MONTH(Order Date))]</column>
            <column>[dataengine.42019.618651678240].[Action (YEAR(Order Date),MONTH(Order Date),Product Category)]</column>
            <column>[dataengine.42019.618651678240].[Action (Category,YEAR(Order Date),MONTH(Order Date))]</column>
            <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[dataengine.42019.618651678240].[sum:Sales:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[dataengine.42019.618651678240].[sum:Sales:qk]' scope='cols' value='true' />
            <format attr='height' field='[dataengine.42019.618651678240].[sum:Sales:qk]' value='45' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[dataengine.42019.618651678240].[none:Sub-Category:nk]' value='21' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[dataengine.42019.618651678240].[none:Sub-Category:nk]' value='99' />
            <format attr='width' field='[dataengine.42019.618651678240].[none:Category:nk]' value='131' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[dataengine.42019.618651678240].[mn:Order Date:ok]' value='iLLL' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' max='0.5' min='-0.5' palette='red_black_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='stroke-size' id='refline1' value='2' />
            <format attr='stroke-color' id='refline1' value='#555555' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='rows' value='#f0f0f0' />
            <format attr='stroke-size' scope='rows' value='2' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='stroke-size' scope='rows' value='2' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' />
              <lod column='[dataengine.42019.618651678240].[none:Product Name:nk]' />
              <lod column='[dataengine.42019.618651678240].[none:Category:nk]' />
              <lod column='[dataengine.42019.618651678240].[sum:Profit:qk]' />
            </encodings>
            <reference-line axis-column='[dataengine.42019.618651678240].[sum:Sales:qk]' enable-instant-analytics='true' formula='median' id='refline1' label-type='none' probability='95' scope='per-cell' value-column='[dataengine.42019.618651678240].[sum:Sales:qk]' z-order='1' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#d3872a' fontname='Tableau Regular' fontsize='8'>&lt;[dataengine.42019.618651678240].[none:Segment:nk]&gt; &gt; &lt;[dataengine.42019.618651678240].[none:Category:nk]&gt; &gt; &lt;[dataengine.42019.618651678240].[none:Sub-Category:nk]&gt;</run>
                <run bold='true' fontcolor='#d3872a' fontname='Tableau Regular' fontsize='11'>&#10;&lt;[dataengine.42019.618651678240].[none:Sub-Category:nk]&gt;: &lt;[dataengine.42019.618651678240].[none:Product Name:nk]&gt;</run>
                <run fontcolor='#de934c' fontname='Tableau Bold' fontsize='12'>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Tableau Regular' fontsize='9'>&#10;Sales:</run>
                <run fontcolor='#787878' fontsize='9'>Æ&#9;</run>
                <run fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[sum:Sales:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Tableau Regular' fontsize='9'>&#10;Profit:</run>
                <run fontcolor='#787878' fontsize='9'>Æ&#9;</run>
                <run fontcolor='#1b1b1b' fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[sum:Profit:qk]&gt;</run>
                <run fontcolor='#686868' fontname='Tableau Regular' fontsize='9'>&#10;Profit Ratio:</run>
                <run fontsize='9'>Æ&#9;</run>
                <run fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3293370008468628' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-range-min' value='false' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-show' value='false' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='229' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([dataengine.42019.618651678240].[none:Category:nk] / [dataengine.42019.618651678240].[none:Sub-Category:nk])</rows>
        <cols>([dataengine.42019.618651678240].[none:Segment:nk] * [dataengine.42019.618651678240].[sum:Sales:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='ProductView'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='15'>Sales by Product Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Region:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[dataengine.42019.618651678240].[yr:Order Date:ok]' value='40' />
            <format attr='width' field='[dataengine.42019.618651678240].[none:Category:nk]' value='98' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[dataengine.42019.618651678240].[mn:Order Date:ok]' value='normal' />
            <format attr='text-format' field='[dataengine.42019.618651678240].[mn:Order Date:ok]' value='iLLL' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[dataengine.42019.618651678240].[sum:Sales:qk]' palette='blue_10_0' type='interpolated' />
            <encoding attr='size-bar' field='[dataengine.42019.618651678240].[sum:Sales:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='4' />
            <format attr='stroke-color' scope='rows' value='#ffffff' />
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[dataengine.42019.618651678240].[yr:Order Date:ok]' value='Order Year' />
            <format attr='title' field='[dataengine.42019.618651678240].[mn:Order Date:ok]' value='Order Year' />
            <format attr='background-color' value='#f7f7f7' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[dataengine.42019.618651678240].[sum:Sales:qk]' />
              <text column='[dataengine.42019.618651678240].[sum:Sales:qk]' />
              <tooltip column='[dataengine.42019.618651678240].[sum:Profit:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#d3872a' fontname='Tableau Medium' fontsize='11'>&lt;[dataengine.42019.618651678240].[none:Category:nk]&gt;</run>
                <run fontcolor='#555555' fontname='Tableau Medium' fontsize='9'>&#10;&lt;[dataengine.42019.618651678240].[mn:Order Date:ok]&gt; &lt;[dataengine.42019.618651678240].[yr:Order Date:ok]&gt;</run>
                <run fontcolor='#787878' fontname='Tableau Medium' fontsize='9'>&#10;Sales:</run>
                <run fontcolor='#787878' fontsize='9'>Æ&#9;</run>
                <run fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[sum:Sales:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Tableau Medium' fontsize='9'>&#10;Profit:</run>
                <run fontcolor='#787878' fontsize='9'>Æ&#9;</run>
                <run fontcolor='#1b1b1b' fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[sum:Profit:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#f0f0f0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([dataengine.42019.618651678240].[none:Category:nk] / [dataengine.42019.618651678240].[yr:Order Date:ok])</rows>
        <cols>[dataengine.42019.618651678240].[mn:Order Date:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='QuotaAttainment'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='13'>Estimated Quota Attainment Results with These Assumptions</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sales Commission' name='Sales Planning new' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Base Salary' datatype='integer' name='[Base Salary]' param-domain-type='range' role='measure' type='quantitative' value='50000'>
              <calculation class='tableau' formula='50000' />
              <range granularity='1000' min='0' />
            </column>
            <column caption='Commission Rate' datatype='real' default-format='n#,##0.0&quot;%&quot;;-#,##0.0&quot;%&quot;' name='[Commission Rate]' param-domain-type='range' role='measure' type='quantitative' value='18.400000000000002'>
              <calculation class='tableau' formula='18.400000000000002' />
              <range granularity='0.10000000000000001' max='100.0' min='1.0' />
            </column>
            <column caption='New Quota' datatype='integer' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[New Quota]' param-domain-type='range' role='measure' type='quantitative' value='500000'>
              <calculation class='tableau' formula='500000' />
              <range granularity='25000' min='100000' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='Sales Planning new'>
            <column caption='Achievement (estimated)' datatype='real' default-format='C1033%' name='[Achievement (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Sales]' scope-isolation='false' />
            </column>
            <column caption='Achieved Quota' datatype='string' name='[Achievement (variable) (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if SUM([Achievement (copy)]) &gt;= [Parameters].[New Quota] then &quot;100% +&quot;&#13;&#10;elseif SUM([Achievement (copy)]) &gt;= 0.75 * [Parameters].[New Quota] then &quot;75-100%&quot;&#13;&#10;elseif SUM([Achievement (copy)]) &gt;= 0.5 * [Parameters].[New Quota] then &quot;50-75%&quot;&#13;&#10;else &quot;Below 50%&quot; end' />
            </column>
            <column datatype='integer' default-format='C1033%' name='[Base (Variable)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Parameters].[Base Salary]' />
            </column>
            <column caption='% of quota achieved' datatype='real' default-format='p0%' name='[Calculation_0440925131659539]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Achievement (copy)])/[Parameters].[New Quota]' scope-isolation='false' />
            </column>
            <column caption='Rank over 3' datatype='real' name='[Calculation_4120925132203686]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ROUND(INDEX() / 3 - 0.6,0) + 1'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' default-format='C1033%' name='[Commission (Variable)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Parameters].[Commission Rate]*[Sales])/100' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='C1033%' name='[OTE (Variable)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Parameters].[Base Salary] + ([Parameters].[Commission Rate]*[Parameters].[New Quota])/100' />
            </column>
            <column datatype='string' name='[Sales Person]' role='dimension' type='nominal' />
            <column datatype='real' default-format='n#,##0;-#,##0' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='real' default-format='C1033%' name='[Total Compensation]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MIN([Base (Variable)]) + SUM([Commission (Variable)])' />
            </column>
            <column-instance column='[OTE (Variable)]' derivation='Max' name='[max:OTE (Variable):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales Person]' derivation='None' name='[none:Sales Person:nk]' pivot='key' type='nominal' />
            <column-instance column='[Achievement (copy)]' derivation='Sum' name='[sum:Achievement (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Achievement (variable) (copy)]' derivation='User' name='[usr:Achievement (variable) (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_0440925131659539]' derivation='User' name='[usr:Calculation_0440925131659539:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4120925132203686]' derivation='User' name='[usr:Calculation_4120925132203686:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Total Compensation]' derivation='User' name='[usr:Total Compensation:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[Sales Planning new].[usr:Achievement (variable) (copy):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Below 50\%&quot;</bucket>
              <bucket>&quot;50-75\%&quot;</bucket>
              <bucket>&quot;75-100\%&quot;</bucket>
              <bucket>&quot;100\% +&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[Sales Planning new].[sum:Achievement (copy):qk]' scope='cols' value='Sales ($)' />
            <format attr='subtitle' class='0' field='[Sales Planning new].[sum:Achievement (copy):qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[Sales Planning new].[sum:Achievement (copy):qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[Sales Planning new].[usr:Calculation_4120925132203686:ok]' value='false' />
            <format attr='text-format' field='[Sales Planning new].[sum:Achievement (copy):qk]' value='n#,##0,K;-#,##0,K' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='reverse-palette' id='refline1' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[Sales Planning new].[usr:Achievement (variable) (copy):nk]' value='' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[Sales Planning new].[usr:Calculation_0440925131659539:qk]' />
              <color column='[Sales Planning new].[usr:Achievement (variable) (copy):nk]' />
              <lod column='[Parameters].[New Quota]' />
              <lod column='[Sales Planning new].[usr:Total Compensation:qk]' />
              <lod column='[Sales Planning new].[max:OTE (Variable):qk]' />
              <lod column='[Sales Planning new].[usr:Total Compensation:qk]' />
            </encodings>
            <reference-line axis-column='[Sales Planning new].[sum:Achievement (copy):qk]' enable-instant-analytics='true' formula='average' id='refline0' label='New quota &lt;Value&gt;' label-type='custom' probability='95' scope='per-table' value-column='[Parameters].[New Quota]' z-order='1' />
            <reference-line axis-column='[Sales Planning new].[sum:Achievement (copy):qk]' enable-instant-analytics='true' fill-above='false' fill-below='true' formula='average' id='refline1' label-type='none' percentage-bands='true' probability='95' scope='per-cell' symmetric='false' value-column='[Parameters].[New Quota]' z-order='2'>
              <reference-line-value percentage='50' />
              <reference-line-value percentage='75' />
              <reference-line-value percentage='100' />
            </reference-line>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#d3872a' fontname='Tableau Bold' fontsize='11'>&lt;[Sales Planning new].[none:Sales Person:nk]&gt;</run>
                <run fontcolor='#666666' fontname='Tableau Medium' fontsize='9'>&#10;&lt;[Sales Planning new].[usr:Achievement (variable) (copy):nk]&gt; Quota Achieved</run>
                <run fontcolor='#000000' fontname='Tableau Semibold' fontsize='9'>Æ&#10;</run>
                <run fontcolor='#666666' fontsize='9'>&#10;Total Sales:         </run>
                <run fontcolor='#000000' fontname='Tableau Bold' fontsize='9'>$</run>
                <run fontcolor='#000000' fontname='Tableau Semibold' fontsize='9'>&lt;[Sales Planning new].[sum:Achievement (copy):qk]&gt;</run>
                <run fontcolor='#666666' fontsize='9'>&#10;Compensation: </run>
                <run fontcolor='#000000' fontname='Tableau Semibold' fontsize='9'>&lt;[Sales Planning new].[usr:Total Compensation:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([Sales Planning new].[usr:Calculation_4120925132203686:ok] / [Sales Planning new].[none:Sales Person:nk])</rows>
        <cols>[Sales Planning new].[sum:Achievement (copy):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sale Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='13'>Sales by Geography</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column caption='Order Profitable?' datatype='boolean' name='[Calculation_9060122104947471]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{fixed [Order ID]:sum([Profit])}&gt;0&#13;&#10;// calculates the profit at the order level' />
              <aliases>
                <alias key='false' value='Unprofitable' />
                <alias key='true' value='Profitable' />
              </aliases>
              <desc>
                <formatted-text>
                  <run>A level of detail expression that calculates profitability for each Order</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Profit Ratio' datatype='real' default-format='p0.0%' name='[Calculation_9921103144103743]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='None' name='[none:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Postal Code]' derivation='None' name='[none:Postal Code:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_9921103144103743]' derivation='User' name='[usr:Calculation_9921103144103743:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Category,MONTH(Order Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (MONTH(Order Date),Product Category)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
              <groupfilter function='level-members' level='[none:Category:nk]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (MONTH(Order Date),Segment)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
              <groupfilter function='level-members' level='[Segment]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Order Profitable?,Category,MONTH(Order Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_9060122104947471]' />
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Order Profitable?,MONTH(Order Date),Segment)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_9060122104947471]' />
              <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
              <groupfilter function='level-members' level='[Segment]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Transaction Profit,MONTH(Order Date),Segment)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_9060122104947471]' />
              <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
              <groupfilter function='level-members' level='[Segment]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (YEAR(Order Date),MONTH(Order Date),Segment)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Order Date:ok]' />
              <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
              <groupfilter function='level-members' level='[Segment]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[dataengine.42019.618651678240].[none:Order Date:qk]' filter-group='13' included-values='in-range'>
            <min>#2013-01-03#</min>
            <max>#2016-12-30#</max>
          </filter>
          <sort class='computed' column='[dataengine.42019.618651678240].[none:Postal Code:ok]' direction='ASC' using='[dataengine.42019.618651678240].[sum:Profit:qk]' />
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Region:nk]' filter-group='14'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' included-values='in-range-or-null'>
            <min>-2.7000000000000011</min>
            <max>0.5</max>
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[none:Order Date:qk]</column>
            <column>[dataengine.42019.618651678240].[Action (MONTH(Order Date),Segment)]</column>
            <column>[dataengine.42019.618651678240].[Action (MONTH(Order Date),Product Category)]</column>
            <column>[dataengine.42019.618651678240].[Action (YEAR(Order Date),MONTH(Order Date),Segment)]</column>
            <column>[dataengine.42019.618651678240].[Action (Category,MONTH(Order Date))]</column>
            <column>[dataengine.42019.618651678240].[Action (Transaction Profit,MONTH(Order Date),Segment)]</column>
            <column>[dataengine.42019.618651678240].[Action (Order Profitable?,MONTH(Order Date),Segment)]</column>
            <column>[dataengine.42019.618651678240].[Action (Order Profitable?,Category,MONTH(Order Date))]</column>
            <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
            <column>[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[dataengine.42019.618651678240].[sum:Sales:qk]' palette='tableau-blue' type='interpolated' />
            <encoding attr='color' field='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' min='-0.5' num-steps='6' palette='orange_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-family' value='Tableau Book' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='size' field='[dataengine.42019.618651678240].[sum:Sales:qk]' value='Sales' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='false' />
            <format attr='enabled' id='tab_coastline' value='true' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='false' />
            <format attr='enabled' id='light_pp2_statebounds' value='true' />
            <format attr='enabled' id='light_pp2_statelabels' value='true' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.20000000298023224' />
            <format attr='map-style' value='tableau-light-gray' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='background-color' value='#f7f7f7' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
            <format attr='border-color' value='#f7f7f7' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' />
              <lod column='[dataengine.42019.618651678240].[none:Postal Code:ok]' />
              <lod column='[dataengine.42019.618651678240].[none:State:nk]' />
              <size column='[dataengine.42019.618651678240].[sum:Sales:qk]' />
              <tooltip column='[dataengine.42019.618651678240].[sum:Profit:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#d3872a' fontname='Tableau Bold' fontsize='12'>&lt;[dataengine.42019.618651678240].[none:State:nk]&gt; - &lt;[dataengine.42019.618651678240].[none:Postal Code:ok]&gt;</run>
                <run fontcolor='#555555' fontsize='12'>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Tableau Light' indent='1170'>&#10;Profit Ratio:</run>
                <run bold='true' fontcolor='#1b1b1b' fontname='Tableau Light' indent='1170'>Æ &#9;</run>
                <run fontcolor='#1b1b1b' fontname='Tableau Semibold' indent='1170'>&lt;[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Tableau Light' indent='1170'>&#10;Sales: &#9;</run>
                <run fontname='Tableau Semibold' indent='1170'>&lt;[dataengine.42019.618651678240].[sum:Sales:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Tableau Light' indent='1170'>&#10;Profit: &#9;</run>
                <run fontcolor='#1b1b1b' fontname='Tableau Semibold' indent='1170'>&lt;[dataengine.42019.618651678240].[sum:Profit:qk]&gt;</run>
                <run fontcolor='#898989' indent='1170'>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7691160440444946' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#898989' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[dataengine.42019.618651678240].[Latitude (generated)]</rows>
        <cols>[dataengine.42019.618651678240].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='0' fontcolor='#906800'>Estimated Sales:</run>
            <run bold='true' fontalignment='0'>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sales Commission' name='Sales Planning new' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='New Quota' datatype='integer' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[New Quota]' param-domain-type='range' role='measure' type='quantitative' value='500000'>
              <calculation class='tableau' formula='500000' />
              <range granularity='25000' min='100000' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='Sales Planning new'>
            <column caption='Achievement (estimated)' datatype='real' default-format='C1033%' name='[Achievement (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Sales]' scope-isolation='false' />
            </column>
            <column caption='% of quota achieved' datatype='real' default-format='p0%' name='[Calculation_0440925131659539]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Achievement (copy)])/[Parameters].[New Quota]' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='n#,##0;-#,##0' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0440925131659539]' derivation='User' name='[usr:Calculation_0440925131659539:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[Sales Planning new].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sales Planning new].[sum:Sales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sales Planning new].[usr:Calculation_0440925131659539:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[Sales Planning new].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[Sales Planning new].[sum:Sales:qk]&quot;</bucket>
              <bucket>&quot;[Sales Planning new].[usr:Calculation_0440925131659539:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[Sales Planning new].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='171' />
            <format attr='font-weight' field='[Sales Planning new].[sum:Sales:qk]' value='bold' />
            <format attr='font-size' field='[Sales Planning new].[sum:Sales:qk]' value='16' />
            <format attr='text-format' field='[Sales Planning new].[sum:Sales:qk]' value='c&quot;$&quot;#,##0,,.00M;(&quot;$&quot;#,##0,,.00M)' />
            <format attr='font-size' field='[Sales Planning new].[Multiple Values]' value='16' />
            <format attr='font-weight' field='[Sales Planning new].[Multiple Values]' value='bold' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[Sales Planning new].[:Measure Names]' value='228' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[Sales Planning new].[:Measure Names]' value='#cc721e' />
            <format attr='font-size' field='[Sales Planning new].[:Measure Names]' value='12' />
            <format attr='text-align' field='[Sales Planning new].[:Measure Names]' value='right' />
            <format attr='font-weight' field='[Sales Planning new].[:Measure Names]' value='bold' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' value='false' />
            <format attr='break-on-special' value='false' />
            <format attr='show-null-value-warning' value='false' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='rows' value='none' />
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[Sales Planning new].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Sales Planning new].[:Measure Names]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Sales by Product'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='11'>Monthly Sales by Product Category - States: </run>
            <run fontname='Tableau Semibold' fontsize='11'>&lt;[dataengine.42019.618651678240].[State]&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column caption='Order Profitable?' datatype='boolean' name='[Calculation_9060122104947471]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{fixed [Order ID]:sum([Profit])}&gt;0&#13;&#10;// calculates the profit at the order level' />
              <aliases>
                <alias key='false' value='Unprofitable' />
                <alias key='true' value='Profitable' />
              </aliases>
              <desc>
                <formatted-text>
                  <run>A level of detail expression that calculates profitability for each Order</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_9060122104947471]' derivation='None' name='[none:Calculation_9060122104947471:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='None' name='[none:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Postal Code]' derivation='None' name='[none:Postal Code:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (MONTH(Order Date),Segment)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
              <groupfilter function='level-members' level='[Segment]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Postal Code,State)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Postal Code:ok]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]' direction='ASC'>
            <dictionary>
              <bucket>true</bucket>
              <bucket>false</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[dataengine.42019.618651678240].[none:Order Date:qk]' filter-group='13' included-values='in-range'>
            <min>#2013-01-03#</min>
            <max>#2016-12-30#</max>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Region:nk]' filter-group='14'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[Action (State)]</column>
            <column>[dataengine.42019.618651678240].[Action (Postal Code,State)]</column>
            <column>[dataengine.42019.618651678240].[Action (MONTH(Order Date),Segment)]</column>
            <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
            <column>[dataengine.42019.618651678240].[none:Order Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[dataengine.42019.618651678240].[sum:Sales:qk]' scope='rows' value='' />
            <format attr='subtitle' class='0' field='[dataengine.42019.618651678240].[sum:Sales:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[dataengine.42019.618651678240].[sum:Sales:qk]' scope='rows' value='true' />
            <format attr='width' field='[dataengine.42019.618651678240].[sum:Sales:qk]' value='60' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' value='*m/d/yyyy' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[dataengine.42019.618651678240].[none:Category:nk]' value='84' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' value='' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]' />
              <tooltip column='[dataengine.42019.618651678240].[sum:Profit:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#d3872a' fontname='Tableau Semibold' fontsize='12'>&lt;[dataengine.42019.618651678240].[none:Category:nk]&gt;</run>
                <run fontcolor='#d3872a' fontsize='12'>Æ </run>
                <run fontcolor='#555555' fontsize='12'>- </run>
                <run>&lt;[dataengine.42019.618651678240].[tmn:Order Date:qk]&gt;</run>
                <run fontsize='9'>&#10;&lt;[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]&gt; Orders</run>
                <run fontcolor='#787878'>&#10;Sales:&#9;</run>
                <run fontname='Tableau Semibold'>&lt;[dataengine.42019.618651678240].[sum:Sales:qk]&gt;</run>
                <run fontcolor='#787878'>&#10;Profit:&#9;</run>
                <run fontcolor='#1b1b1b' fontname='Tableau Semibold'>&lt;[dataengine.42019.618651678240].[sum:Profit:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.88955801725387573' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([dataengine.42019.618651678240].[none:Category:nk] * [dataengine.42019.618651678240].[sum:Sales:qk])</rows>
        <cols>[dataengine.42019.618651678240].[tmn:Order Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sales by Segment'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='11'>Monthly Sales by Segment - States: </run>
            <run fontname='Tableau Semibold' fontsize='11'>&lt;[dataengine.42019.618651678240].[State]&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column caption='Order Profitable?' datatype='boolean' name='[Calculation_9060122104947471]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{fixed [Order ID]:sum([Profit])}&gt;0&#13;&#10;// calculates the profit at the order level' />
              <aliases>
                <alias key='false' value='Unprofitable' />
                <alias key='true' value='Profitable' />
              </aliases>
              <desc>
                <formatted-text>
                  <run>A level of detail expression that calculates profitability for each Order</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_9060122104947471]' derivation='None' name='[none:Calculation_9060122104947471:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='None' name='[none:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Postal Code]' derivation='None' name='[none:Postal Code:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (MONTH(Order Date),Product Category)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
              <groupfilter function='level-members' level='[none:Category:nk]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Postal Code,State)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Postal Code:ok]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]' direction='ASC'>
            <dictionary>
              <bucket>true</bucket>
              <bucket>false</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[dataengine.42019.618651678240].[none:Order Date:qk]' filter-group='13' included-values='in-range'>
            <min>#2013-01-03#</min>
            <max>#2016-12-30#</max>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Region:nk]' filter-group='14'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[Action (State)]</column>
            <column>[dataengine.42019.618651678240].[Action (Postal Code,State)]</column>
            <column>[dataengine.42019.618651678240].[Action (MONTH(Order Date),Product Category)]</column>
            <column>[dataengine.42019.618651678240].[none:Order Date:qk]</column>
            <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[dataengine.42019.618651678240].[sum:Sales:qk]' scope='rows' value='' />
            <format attr='subtitle' class='0' field='[dataengine.42019.618651678240].[sum:Sales:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[dataengine.42019.618651678240].[sum:Sales:qk]' scope='rows' value='false' />
            <format attr='width' field='[dataengine.42019.618651678240].[sum:Sales:qk]' value='60' />
            <encoding attr='space' class='0' field='[dataengine.42019.618651678240].[sum:Sales:qk]' field-type='quantitative' range-type='uniform' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' value='*m/d/yyyy' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' value='' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]' value='' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]' />
              <tooltip column='[dataengine.42019.618651678240].[sum:Profit:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#d3872a' fontname='Tableau Semibold' fontsize='12'>&lt;[dataengine.42019.618651678240].[none:Segment:nk]&gt;</run>
                <run fontcolor='#555555' fontname='Tableau Semibold' fontsize='12'>Æ </run>
                <run fontcolor='#555555' fontsize='12'>- </run>
                <run fontcolor='#555555'>&lt;[dataengine.42019.618651678240].[tmn:Order Date:qk]&gt;</run>
                <run fontsize='9'>&#10;&lt;[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]&gt; Orders</run>
                <run fontcolor='#787878'>&#10;Sales:&#9;</run>
                <run fontname='Tableau Semibold'>&lt;[dataengine.42019.618651678240].[sum:Sales:qk]&gt;</run>
                <run fontcolor='#787878'>&#10;Profit:&#9;</run>
                <run fontcolor='#1b1b1b' fontname='Tableau Semibold'>&lt;[dataengine.42019.618651678240].[sum:Profit:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.790607750415802' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([dataengine.42019.618651678240].[none:Segment:nk] * [dataengine.42019.618651678240].[sum:Sales:qk])</rows>
        <cols>[dataengine.42019.618651678240].[tmn:Order Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 21'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='ShipSummary'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column caption='Days to Ship Actual' datatype='integer' name='[Calculation_0831103151444568]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;,[Order Date],[Ship Date])' />
            </column>
            <column caption='Ship Status' datatype='string' name='[Calculation_6401103171259723]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_0831103151444568]&gt; [Calculation_6861103170623145] then &quot;Shipped Late&quot; &#13;&#10;elseIF [Calculation_0831103151444568]= [Calculation_6861103170623145] then &quot;Shipped On Time&quot;&#13;&#10;Else &quot;Shipped Early&quot; end' />
              <desc>
                <formatted-text>
                  <run>Was shipment early, ontime or late based on ship mode</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Days to Ship Scheduled' datatype='integer' name='[Calculation_6861103170623145]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE  [Ship Mode]&#13;&#10;WHEN &quot;Same Day&quot; THEN 0&#13;&#10;WHEN &quot;First Class&quot; THEN 1&#13;&#10;WHEN &quot;Second Class&quot; THEN 3&#13;&#10;WHEN &quot;Standard Class&quot; THEN 6&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_6401103171259723]' derivation='None' name='[none:Calculation_6401103171259723:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Calculation_6401103171259723:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Early&quot;</bucket>
              <bucket>&quot;On Time&quot;</bucket>
              <bucket>&quot;Delayed&quot;</bucket>
              <bucket>%all%</bucket>
              <bucket>&quot;Shipped Early&quot;</bucket>
              <bucket>&quot;Shipped On Time&quot;</bucket>
              <bucket>&quot;Shipped Late&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Ship Mode:nk]' filter-group='11'>
            <groupfilter function='level-members' level='[none:Ship Mode:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[qr:Order Date:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[qr:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[yr:Order Date:ok]' filter-group='18'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2016' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]</column>
            <column>[dataengine.42019.618651678240].[qr:Order Date:ok]</column>
            <column>[dataengine.42019.618651678240].[none:Ship Mode:nk]</column>
            <column>[dataengine.42019.618651678240].[yr:Order Date:ok]</column>
            <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[dataengine.42019.618651678240].[pcto:sum:Number of Records:qk]' scope='cols' value='false' />
            <format attr='subtitle' class='0' field='[dataengine.42019.618651678240].[pcto:sum:Number of Records:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[dataengine.42019.618651678240].[pcto:sum:Number of Records:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[dataengine.42019.618651678240].[pcto:sum:Number of Records:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-size' value='14' />
            <format attr='font-weight' value='bold' />
            <format attr='border-width' scope='cols' value='1' />
            <format attr='border-color' scope='cols' value='#ffffff' />
            <format attr='text-align' value='center' />
            <format attr='border-style' value='none' />
            <format attr='text-format' field='[dataengine.42019.618651678240].[pcto:sum:Number of Records:qk]' value='p0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]' value='true' />
            <format attr='font-size' field='[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]' value='10' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='cols' value='2' />
            <format attr='line-pattern' scope='rows' value='none' />
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]' />
              <text column='[dataengine.42019.618651678240].[pcto:sum:Number of Records:qk]' />
              <text column='[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontname='Tableau Medium' fontsize='12'>&lt;[dataengine.42019.618651678240].[pcto:sum:Number of Records:qk]&gt;</run>
                <run fontsize='12'> &lt;[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='normal' />
                <format attr='font-family' value='Tableau Book' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.9890055656433105' />
                <format attr='has-stroke' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[dataengine.42019.618651678240].[pcto:sum:Number of Records:qk]</cols>
        <tooltip-style tooltip-mode='none' />
      </table>
    </worksheet>
    <worksheet name='ShippingTrend'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Shipments by Mode</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column caption='Days to Ship Actual' datatype='integer' name='[Calculation_0831103151444568]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;,[Order Date],[Ship Date])' />
            </column>
            <column caption='Ship Status' datatype='string' name='[Calculation_6401103171259723]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_0831103151444568]&gt; [Calculation_6861103170623145] then &quot;Shipped Late&quot; &#13;&#10;elseIF [Calculation_0831103151444568]= [Calculation_6861103170623145] then &quot;Shipped On Time&quot;&#13;&#10;Else &quot;Shipped Early&quot; end' />
              <desc>
                <formatted-text>
                  <run>Was shipment early, ontime or late based on ship mode</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Days to Ship Scheduled' datatype='integer' name='[Calculation_6861103170623145]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE  [Ship Mode]&#13;&#10;WHEN &quot;Same Day&quot; THEN 0&#13;&#10;WHEN &quot;First Class&quot; THEN 1&#13;&#10;WHEN &quot;Second Class&quot; THEN 3&#13;&#10;WHEN &quot;Standard Class&quot; THEN 6&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_6401103171259723]' derivation='None' name='[none:Calculation_6401103171259723:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Week-Trunc' name='[twk:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Delayed?)]'>
            <groupfilter function='level-members' level='[Calculation_6401103171259723]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Ship Status)]'>
            <groupfilter function='level-members' level='[Calculation_6401103171259723]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Shipped Late&quot;</bucket>
              <bucket>&quot;Shipped On Time&quot;</bucket>
              <bucket>&quot;Shipped Early&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Region:nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Ship Mode:nk]' filter-group='11'>
            <groupfilter function='level-members' level='[none:Ship Mode:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[qr:Order Date:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[qr:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[yr:Order Date:ok]' filter-group='18'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2016' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[yr:Order Date:ok]</column>
            <column>[dataengine.42019.618651678240].[qr:Order Date:ok]</column>
            <column>[dataengine.42019.618651678240].[none:Ship Mode:nk]</column>
            <column>[dataengine.42019.618651678240].[Action (Delayed?)]</column>
            <column>[dataengine.42019.618651678240].[Action (Ship Status)]</column>
            <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[dataengine.42019.618651678240].[twk:Order Date:qk]' value='29' />
            <format attr='title' class='0' field='[dataengine.42019.618651678240].[sum:Number of Records:qk]' scope='rows' value='Number of Shipments' />
            <format attr='subtitle' class='0' field='[dataengine.42019.618651678240].[sum:Number of Records:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[dataengine.42019.618651678240].[sum:Number of Records:qk]' scope='rows' value='true' />
            <format attr='width' field='[dataengine.42019.618651678240].[sum:Number of Records:qk]' value='48' />
            <format attr='subtitle' class='0' field='[dataengine.42019.618651678240].[twk:Order Date:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[dataengine.42019.618651678240].[twk:Order Date:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[dataengine.42019.618651678240].[twk:Order Date:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[dataengine.42019.618651678240].[yr:Order Date:ok]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]' value='On Time?' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[dataengine.42019.618651678240].[yr:Order Date:ok]' value='Order Year' />
            <format attr='title' field='[dataengine.42019.618651678240].[qr:Order Date:ok]' value='Order Quarter' />
            <format attr='background-color' value='#f7f7f7' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#d3872a' fontname='Tableau Bold' fontsize='12'>&lt;[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]&gt;</run>
                <run fontcolor='#666666'>&#10;Week of</run>
                <run fontcolor='#555555'>Æ </run>
                <run fontname='Tableau Medium'>&lt;[dataengine.42019.618651678240].[twk:Order Date:qk]&gt;</run>
                <run fontcolor='#787878'>&#10;Shipments:&#9;</run>
                <run fontname='Tableau Medium'>&lt;[dataengine.42019.618651678240].[sum:Number of Records:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.16392265260219574' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-transparency' value='211' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[dataengine.42019.618651678240].[sum:Number of Records:qk]</rows>
        <cols>([dataengine.42019.618651678240].[yr:Order Date:ok] * [dataengine.42019.618651678240].[twk:Order Date:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Total Sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='18'>Executive Overview - Profitability </run>
            <run fontsize='14'>(&lt;[dataengine.42019.618651678240].[State]&gt;)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='New Business Growth' datatype='real' default-format='p0%' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.59999999999999998'>
              <calculation class='tableau' formula='0.59999999999999998' />
              <range granularity='0.01' max='1.0' min='0.0' />
            </column>
            <column caption='Churn Rate' datatype='real' default-format='p0.00%' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0.064000000000000001'>
              <calculation class='tableau' formula='0.064000000000000001' />
              <range granularity='0.001' max='0.25' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column caption='Sales estimate' datatype='real' default-format='c&quot;$&quot;#,##0,.0K;(&quot;$&quot;#,##0,.0K)' name='[Calculation_1641214165608856]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Sales]*(1-[Parameters].[Parameter 2])*(1+[Parameters].[Parameter 1])' />
            </column>
            <column caption='Sales Forecast' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_5421109230915137]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Sales]*(1-[Parameters].[Parameter 2])*(1+[Parameters].[Parameter 1])' />
            </column>
            <column caption='Order Profitable?' datatype='boolean' name='[Calculation_9060122104947471]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{fixed [Order ID]:sum([Profit])}&gt;0&#13;&#10;// calculates the profit at the order level' />
              <aliases>
                <alias key='false' value='Unprofitable' />
                <alias key='true' value='Profitable' />
              </aliases>
              <desc>
                <formatted-text>
                  <run>A level of detail expression that calculates profitability for each Order</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Sales per Customer' datatype='real' default-format='C1033%' name='[Calculation_9321103144526191]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Sales])/countD([Customer Name])' />
            </column>
            <column caption='Profit Ratio' datatype='real' default-format='p0.0%' name='[Calculation_9921103144103743]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' default-format='p0.00%' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column caption='Units estimate' datatype='real' default-format='n#,##0;-#,##0' name='[Sales est (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ROUND([Quantity]*(1-[Parameters].[Parameter 2])*(1+[Parameters].[Parameter 1]),0)' scope-isolation='false' />
            </column>
            <column caption='Profit per Order' datatype='real' default-format='C1033%' name='[Sales per Customer (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Profit])/countD([Order ID])' />
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Discount]' derivation='Avg' name='[avg:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='None' name='[none:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1641214165608856]' derivation='Sum' name='[sum:Calculation_1641214165608856:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5421109230915137]' derivation='Sum' name='[sum:Calculation_5421109230915137:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales est (copy)]' derivation='Sum' name='[sum:Sales est (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_9321103144526191]' derivation='User' name='[usr:Calculation_9321103144526191:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9921103144103743]' derivation='User' name='[usr:Calculation_9921103144103743:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales per Customer (copy)]' derivation='User' name='[usr:Sales per Customer (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[sum:Sales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[usr:Sales per Customer (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[usr:Calculation_9321103144526191:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[avg:Discount:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[sum:Quantity:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[dataengine.42019.618651678240].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Sales:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Profit:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[usr:Sales per Customer (copy):qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[usr:Calculation_9321103144526191:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[avg:Discount:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Calculation_5421109230915137:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Calculation_1641214165608856:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Quantity:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Sales est (copy):qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Order Profitable?,Category,MONTH(Order Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_9060122104947471]' />
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Order Profitable?,MONTH(Order Date),Segment)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_9060122104947471]' />
              <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
              <groupfilter function='level-members' level='[Segment]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[dataengine.42019.618651678240].[none:Order Date:qk]' filter-group='13' included-values='in-range'>
            <min>#2013-01-03#</min>
            <max>#2016-12-30#</max>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Region:nk]' filter-group='14'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
            <column>[dataengine.42019.618651678240].[Action (State)]</column>
            <column>[dataengine.42019.618651678240].[Action (Order Profitable?,MONTH(Order Date),Segment)]</column>
            <column>[dataengine.42019.618651678240].[:Measure Names]</column>
            <column>[dataengine.42019.618651678240].[Action (Order Profitable?,Category,MONTH(Order Date))]</column>
            <column>[dataengine.42019.618651678240].[none:Order Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[dataengine.42019.618651678240].[:Measure Names]' value='23' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' value='center' />
            <format attr='font-size' field='[dataengine.42019.618651678240].[:Measure Names]' value='8' />
            <format attr='font-family' field='[dataengine.42019.618651678240].[:Measure Names]' value='Tableau Regular' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='cols' value='none' />
            <format attr='line-pattern' scope='rows' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[dataengine.42019.618651678240].[Multiple Values]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='false' fontname='Tableau Medium'>&lt;</run>
                <run bold='false' fontname='Tableau Medium'>[dataengine.42019.618651678240].[Multiple Values]</run>
                <run bold='false' fontname='Tableau Medium'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[dataengine.42019.618651678240].[:Measure Names]</cols>
        <tooltip-style tooltip-mode='none' />
      </table>
    </worksheet>
    <worksheet name='What If Forecast'>
      <layout-options>
        <title>
          <formatted-text>
            <run>What if Forecast Based on </run>
            <run>&lt;</run>
            <run>[dataengine.42019.618651678240].[yr:Order Date:ok]</run>
            <run>&gt;</run>
            <run> Sales (</run>
            <run>&lt;</run>
            <run>[Parameters].[Parameter 1]</run>
            <run>&gt;</run>
            <run> Growth, </run>
            <run>&lt;</run>
            <run>[Parameters].[Parameter 2]</run>
            <run>&gt;</run>
            <run> Churn)</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run fontcolor='#353535'>Change the Growth Rate and Churn Rate to better understand their impact on sales forecasts</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='New Business Growth' datatype='real' default-format='p0%' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.59999999999999998'>
              <calculation class='tableau' formula='0.59999999999999998' />
              <range granularity='0.01' max='1.0' min='0.0' />
            </column>
            <column caption='Churn Rate' datatype='real' default-format='p0.00%' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0.064000000000000001'>
              <calculation class='tableau' formula='0.064000000000000001' />
              <range granularity='0.001' max='0.25' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column caption='Sales Forecast' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_5421109230915137]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Sales]*(1-[Parameters].[Parameter 2])*(1+[Parameters].[Parameter 1])' />
            </column>
            <column caption='SUM([Sales])-SUM([Sales Forecast])' datatype='real' name='[Calculation_9330126204734562]' role='measure' type='quantitative' user:unnamed='WhatIfForecast'>
              <calculation class='tableau' formula='SUM([Sales])-SUM([Calculation_5421109230915137])' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_5421109230915137]' derivation='Sum' name='[sum:Calculation_5421109230915137:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9330126204734562]' derivation='User' name='[usr:Calculation_9330126204734562:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[sum:Sales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[sum:Calculation_5421109230915137:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[dataengine.42019.618651678240].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Sales:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Calculation_5421109230915137:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Quantity:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[yr:Order Date:ok]'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2016' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[yr:Order Date:ok]</column>
            <column>[dataengine.42019.618651678240].[:Measure Names]</column>
            <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[dataengine.42019.618651678240].[mn:Order Date:ok]' value='' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[dataengine.42019.618651678240].[:Measure Names]' value='124' />
            <format attr='border-width' data-class='subtotal' value='2' />
            <format attr='border-width' data-class='total' scope='rows' value='1' />
            <format attr='border-width' data-class='subtotal' scope='rows' value='1' />
            <format attr='border-width' data-class='subtotal' scope='cols' value='1' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='subtotal' value='2' />
            <format attr='border-width' data-class='total' scope='rows' value='1' />
            <format attr='border-width' data-class='subtotal' scope='rows' value='1' />
            <format attr='border-width' data-class='subtotal' scope='cols' value='1' />
            <format attr='border-width' data-class='total' scope='cols' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='0' />
            <format attr='div-level' scope='cols' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[dataengine.42019.618651678240].[:Measure Names]' />
              <text column='[dataengine.42019.618651678240].[Multiple Values]' />
              <lod column='[dataengine.42019.618651678240].[usr:Calculation_9330126204734562:qk]' />
              <lod column='[dataengine.42019.618651678240].[sum:Sales:qk]' />
              <lod column='[dataengine.42019.618651678240].[sum:Calculation_5421109230915137:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#d3872a' fontname='Tableau Semibold' fontsize='12'>&lt;[dataengine.42019.618651678240].[none:Region:nk]&gt; &lt;[dataengine.42019.618651678240].[none:Segment:nk]&gt;</run>
                <run fontname='Tableau Medium'>&#10;&lt;[dataengine.42019.618651678240].[mn:Order Date:ok]&gt;</run>
                <run fontcolor='#353535' fontname='Tableau Medium'>Æ </run>
                <run fontcolor='#898989' fontsize='9'>&#10;Actual:&#9;</run>
                <run fontcolor='#555555' fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[sum:Sales:qk]&gt;</run>
                <run fontcolor='#898989' fontsize='9'>&#10;Forecast:</run>
                <run fontcolor='#555555' fontsize='9'>Æ&#9;</run>
                <run fontcolor='#555555' fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[sum:Calculation_5421109230915137:qk]&gt;</run>
                <run fontcolor='#898989' fontsize='9'>&#10;Difference:</run>
                <run fontcolor='#555555' fontsize='9'>Æ&#9;</run>
                <run fontcolor='#555555' fontname='Tableau Bold' fontsize='9'>$&lt;[dataengine.42019.618651678240].[usr:Calculation_9330126204734562:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([dataengine.42019.618651678240].[none:Region:nk] / ([dataengine.42019.618651678240].[none:Segment:nk] / [dataengine.42019.618651678240].[:Measure Names]))</rows>
        <cols total='true'>([dataengine.42019.618651678240].[qr:Order Date:ok] / [dataengine.42019.618651678240].[mn:Order Date:ok])</cols>
        <subtotals>
          <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
          <column>[dataengine.42019.618651678240].[none:Segment:nk]</column>
          <column>[dataengine.42019.618651678240].[qr:Order Date:ok]</column>
        </subtotals>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Commission Model'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='0'>Sales Commission Model</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-container'>
          <format attr='border-style' id='dash-zone_12' value='solid' />
          <format attr='border-color' id='dash-zone_12' value='#d7d7d7' />
          <format attr='border-style' id='dash-zone_66' value='solid' />
          <format attr='background-color' id='dash-zone_66' value='#00000000' />
          <format attr='border-color' id='dash-zone_66' value='#acacac' />
        </style-rule>
      </style>
      <size minheight='600' minwidth='800' />
      <zones>
        <zone h='100000' id='7' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='63' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='6076' id='62' type='title' w='100000' x='0' y='0' />
            <zone fixed-size='1036' h='74310' id='54' is-fixed='true' param='horz' type='layout-flow' w='100000' x='0' y='6076'>
              <zone fixed-size='1004' h='74310' id='2' is-fixed='true' param='vert' type='layout-flow' w='100000' x='0' y='6076'>
                <zone h='4005' id='4' type='text' w='100000' x='0' y='6076'>
                  <formatted-text>
                    <run fontalignment='0' fontsize='11'>Enter new quota, commission rate and base salary to estimate sales and compensation</run>
                  </formatted-text>
                </zone>
                <zone fixed-size='57' h='7873' id='72' is-fixed='true' type='layout-basic' w='100000' x='0' y='10081'>
                  <zone h='7873' id='5' param='horz' type='layout-flow' w='66667' x='0' y='10081'>
                    <zone custom-title='true' h='7873' id='9' mode='type_in' param='[Parameters].[New Quota]' type='paramctrl' w='22437' x='0' y='10081'>
                      <formatted-text>
                        <run fontcolor='#555555' fontsize='10'>New quota</run>
                      </formatted-text>
                    </zone>
                    <zone custom-title='true' h='7873' id='11' mode='slider' param='[Parameters].[Commission Rate]' type='paramctrl' w='22114' x='22437' y='10081'>
                      <formatted-text>
                        <run fontcolor='#555555' fontsize='10'>Commission rate</run>
                      </formatted-text>
                    </zone>
                    <zone custom-title='true' h='7873' id='10' mode='type_in' param='[Parameters].[Base Salary]' type='paramctrl' w='22114' x='44551' y='10081'>
                      <formatted-text>
                        <run fontcolor='#555555' fontsize='10'>Base salary</run>
                      </formatted-text>
                    </zone>
                  </zone>
                  <zone h='7873' id='73' param='horz' type='layout-flow' w='17577' x='82423' y='10081'>
                    <zone fixed-size='309' h='7873' id='71' is-fixed='true' type='empty' w='17577' x='82423' y='10081' />
                  </zone>
                  <zone custom-title='true' fixed-size='175' h='7873' id='57' is-fixed='true' mode='compact' param='[Parameters].[Parameter 1 1]' type='paramctrl' w='15756' x='66667' y='10081'>
                    <formatted-text>
                      <run fontcolor='#555555' fontsize='10'>Sort by</run>
                    </formatted-text>
                  </zone>
                </zone>
                <zone h='62432' id='64' param='horz' type='layout-flow' w='100000' x='0' y='17954'>
                  <zone h='62432' id='74' name='QuotaAttainment' w='49354' x='0' y='17954'>
                    <layout-cache fixed-size-h='935' minwidth='222' type-h='fixed' type-w='scalable' />
                  </zone>
                  <zone h='62432' id='6' name='CommissionProjection' w='50322' x='49354' y='17954'>
                    <layout-cache fixed-size-h='915' minwidth='238' type-h='fixed' type-w='scalable' />
                  </zone>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='38' h='5249' id='68' is-fixed='true' type='layout-basic' w='100000' x='0' y='80386'>
              <zone h='5249' id='69' param='horz' type='layout-flow' w='49314' x='0' y='80386'>
                <zone h='5249' id='75' name='QuotaAttainment' pane-specification-id='0' param='[Sales Planning new].[usr:Achievement (variable) (copy):nk]' show-title='false' type='color' w='49314' x='0' y='80386' />
              </zone>
              <zone fixed-size='565' h='5249' id='55' is-fixed='true' leg-item-layout='horz' name='CommissionProjection' pane-specification-id='3' param='[Sales Planning new].[:Measure Names]' show-title='false' type='color' w='50686' x='49314' y='80386' />
            </zone>
            <zone fixed-size='104' h='14365' id='66' is-fixed='true' param='horz' type='layout-flow' w='100000' x='0' y='85635'>
              <zone fixed-size='358' h='13261' id='14' is-fixed='true' name='Sales' w='29540' x='484' y='85911'>
                <layout-cache cell-count-h='2' non-cell-size-h='43' type-h='cell' type-w='cell' />
              </zone>
              <zone fixed-size='380' h='13261' id='13' is-fixed='true' name='OTE' w='31316' x='30024' y='85911'>
                <layout-cache cell-count-h='2' non-cell-size-h='43' type-h='cell' type-w='cell' />
              </zone>
              <zone h='13261' id='70' type='empty' w='38176' x='61340' y='85911' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Customers'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='0'>Customer Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-subtitle'>
          <format attr='font-size' value='10' />
        </style-rule>
        <style-rule element='dash-container'>
          <format attr='background-color' id='dash-zone_15' value='#f7f7f7' />
          <format attr='border-style' id='dash-zone_15' value='solid' />
        </style-rule>
      </style>
      <size minheight='620' minwidth='1000' />
      <datasources>
        <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
      </datasources>
      <datasource-dependencies datasource='dataengine.42019.618651678240'>
        <column datatype='string' name='[Category]' role='dimension' type='nominal' />
        <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
        <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
        <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
        <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
        <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='6729' id='9' type='title' w='100000' x='0' y='0' />
          <zone h='93271' id='4' type='layout-basic' w='100000' x='0' y='6729'>
            <zone h='93271' id='21' param='vert' type='layout-flow' w='100000' x='0' y='6729'>
              <zone h='16574' id='1' name='CustomerOverview' show-title='false' w='100000' x='0' y='6729'>
                <layout-cache fixed-size-h='112' type-h='fixed' type-w='fixed' />
              </zone>
              <zone h='76697' id='22' param='horz' type='layout-flow' w='100000' x='0' y='23303'>
                <zone h='76697' id='3' name='CustomerScatter' w='41041' x='0' y='23303'>
                  <layout-cache minheight='197' minwidth='184' type-h='scalable' type-w='scalable' />
                </zone>
                <zone h='76697' id='8' name='CustomerRank' w='45237' x='41041' y='23303'>
                  <layout-cache fixed-size-h='15957' minwidth='240' type-h='fixed' type-w='scalable' />
                </zone>
                <zone fixed-size='170' h='76697' id='15' is-fixed='true' param='vert' type='layout-flow' w='13721' x='86278' y='23303'>
                  <zone h='7181' id='14' mode='dropdown' name='CustomerOverview' param='[dataengine.42019.618651678240].[yr:Order Date:ok]' type='filter' w='13399' x='86439' y='23579' />
                  <zone h='14916' id='18' name='CustomerOverview' param='[dataengine.42019.618651678240].[none:Category:nk]' type='filter' w='13399' x='86439' y='30760' />
                  <zone h='14916' id='17' name='CustomerOverview' param='[dataengine.42019.618651678240].[none:Segment:nk]' type='filter' w='13399' x='86439' y='45676' />
                  <zone h='8977' id='27' name='CustomerScatter' pane-specification-id='0' param='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' type='color' w='13399' x='86439' y='60592' />
                  <zone h='29603' id='19' type='empty' w='13399' x='86439' y='69569' />
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Order Details'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='0'>&lt;</run>
            <run fontalignment='0'>Sheet Name</run>
            <run fontalignment='0'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-container'>
          <format attr='border-style' id='dash-zone_10' value='solid' />
          <format attr='border-color' id='dash-zone_10' value='#d7d7d7' />
        </style-rule>
      </style>
      <size minheight='600' minwidth='800' />
      <datasources>
        <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
      </datasources>
      <datasource-dependencies datasource='dataengine.42019.618651678240'>
        <column datatype='string' name='[Category]' role='dimension' type='nominal' />
        <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
        <column datatype='string' name='[Region]' role='dimension' type='nominal' />
        <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
        <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
        <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
        <column-instance column='[Order Date]' derivation='None' name='[none:Order Date:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
        <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
        <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='18' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='6352' id='17' type='title' w='100000' x='0' y='0' />
            <zone h='93096' id='7' param='horz' type='layout-flow' w='100000' x='0' y='6352'>
              <zone h='93096' id='5' param='vert' type='layout-flow' w='100000' x='0' y='6352'>
                <zone fixed-size='77' h='10635' id='10' is-fixed='true' param='horz' type='layout-flow' w='100000' x='0' y='6352'>
                  <zone h='10083' id='13' name='ProductDetailSheet' param='[dataengine.42019.618651678240].[none:Order Date:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='31232' x='484' y='6628' />
                  <zone h='10083' id='14' mode='checkdropdown' name='ProductDetailSheet' param='[dataengine.42019.618651678240].[none:Region:nk]' type='filter' w='13560' x='31716' y='6628' />
                  <zone h='10083' id='15' mode='checkdropdown' name='ProductDetailSheet' param='[dataengine.42019.618651678240].[none:State:nk]' type='filter' values='relevant' w='13560' x='45276' y='6628' />
                  <zone h='10083' id='16' mode='checkdropdown' name='ProductDetailSheet' param='[dataengine.42019.618651678240].[none:City:nk]' type='filter' values='relevant' w='13560' x='58836' y='6628' />
                  <zone h='10083' id='8' mode='checkdropdown' name='ProductDetailSheet' param='[dataengine.42019.618651678240].[none:Category:nk]' type='filter' values='relevant' w='13560' x='72396' y='6628' />
                  <zone h='10083' id='9' mode='checkdropdown' name='ProductDetailSheet' param='[dataengine.42019.618651678240].[none:Segment:nk]' type='filter' values='relevant' w='13560' x='85956' y='6628' />
                </zone>
                <zone h='82461' id='3' type='layout-basic' w='100000' x='0' y='16987'>
                  <zone h='82461' id='1' name='ProductDetailSheet' w='100000' x='0' y='16987' />
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Overview'>
      <layout-options export-center-horz='true' export-center-vert='true' export-orientation='landscape'>
        <title>
          <formatted-text>
            <run>Executive Overview - Profitability</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-subtitle'>
          <format attr='font-size' value='10' />
        </style-rule>
        <style-rule element='dash-container'>
          <format attr='background-color' id='dash-zone_18' value='#f7f7f7' />
          <format attr='border-style' id='dash-zone_18' value='solid' />
          <format attr='border-color' id='dash-zone_18' value='#d7d7d7' />
        </style-rule>
      </style>
      <size minheight='620' minwidth='1000' />
      <datasources>
        <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
      </datasources>
      <datasource-dependencies datasource='dataengine.42019.618651678240'>
        <column caption='Profit Ratio' datatype='real' default-format='p0.0%' name='[Calculation_9921103144103743]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
        </column>
        <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
        <column datatype='string' name='[Region]' role='dimension' type='nominal' />
        <column-instance column='[Order Date]' derivation='None' name='[none:Order Date:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_9921103144103743]' derivation='User' name='[usr:Calculation_9921103144103743:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='12' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='14639' id='32' name='Total Sales' w='100000' x='0' y='0'>
              <layout-cache fixed-size-h='94' type-h='fixed' type-w='fixed' />
            </zone>
            <zone fixed-size='352' h='48619' id='26' is-fixed='true' param='horz' type='layout-flow' w='100000' x='0' y='14639'>
              <zone h='48619' id='1' name='Sale Map' show-title='false' w='84100' x='0' y='14639'>
                <layout-cache minheight='201' minwidth='201' type-h='scalable' type-w='scalable' />
              </zone>
              <zone fixed-size='197' h='48619' id='18' is-fixed='true' param='vert' type='layout-flow' w='15900' x='84100' y='14639'>
                <zone h='8563' id='17' mode='dropdown' name='Sale Map' param='[dataengine.42019.618651678240].[none:Region:nk]' type='filter' w='15255' x='84261' y='14915' />
                <zone h='10911' id='16' name='Sale Map' param='[dataengine.42019.618651678240].[none:Order Date:qk]' show-null-ctrls='false' type='filter' w='15255' x='84261' y='23478' />
                <zone h='10911' id='24' name='Sale Map' param='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='15255' x='84261' y='34389' />
                <zone h='8977' id='27' name='Sale Map' pane-specification-id='2' param='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' type='color' w='15255' x='84261' y='45300' />
                <zone h='6629' id='23' name='Sales by Segment' pane-specification-id='3' param='[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]' show-title='false' type='color' w='15255' x='84261' y='54277' />
              </zone>
            </zone>
            <zone h='36742' id='22' param='horz' type='layout-flow' w='100000' x='0' y='63258'>
              <zone h='36742' id='8' name='Sales by Segment' w='49838' x='0' y='63258'>
                <layout-cache minheight='367' minwidth='242' type-h='scalable' type-w='scalable' />
              </zone>
              <zone h='36742' id='10' name='Sales by Product' w='49838' x='49838' y='63258'>
                <layout-cache minheight='367' minwidth='246' type-h='scalable' type-w='scalable' />
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout name='Phone'>
          <layout-options export-center-horz='true' export-center-vert='true' export-orientation='landscape'>
            <title>
              <formatted-text>
                <run fontsize='11'>Executive Overview - Profitability</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='320' minheight='320' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='100000' id='36' param='vert' type='layout-flow' w='100000' x='0' y='0'>
                <zone h='10313' id='33' type='title' w='100000' x='0' y='0' />
                <zone h='89687' id='12' param='vert' type='layout-flow' w='100000' x='0' y='10313'>
                  <zone fixed-size='386' h='89687' id='26' is-fixed='true' param='horz' type='layout-flow' w='100000' x='0' y='10313'>
                    <zone h='89687' id='1' name='Sale Map' show-title='false' w='72714' x='0' y='10313'>
                      <layout-cache minheight='201' minwidth='201' type-h='scalable' type-w='scalable' />
                    </zone>
                    <zone fixed-size='182' h='89687' id='18' is-fixed='true' param='vert' type='layout-flow' w='27286' x='72714' y='10313'>
                      <zone h='19375' id='17' mode='dropdown' name='Sale Map' param='[dataengine.42019.618651678240].[none:Region:nk]' type='filter' w='26086' x='73014' y='10938' />
                      <zone h='23749' id='16' name='Sale Map' param='[dataengine.42019.618651678240].[none:Order Date:qk]' show-null-ctrls='false' type='filter' w='26086' x='73014' y='30313' />
                      <zone h='23749' id='24' name='Sale Map' param='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' type='filter' w='26086' x='73014' y='54062' />
                      <zone h='20314' id='27' name='Sale Map' pane-specification-id='2' param='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' type='color' w='26086' x='73014' y='77811' />
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
    </dashboard>
    <dashboard name='Product'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='0'>Product Drilldown</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-subtitle'>
          <format attr='font-size' value='10' />
        </style-rule>
        <style-rule element='dash-container'>
          <format attr='border-style' id='dash-zone_13' value='solid' />
          <format attr='background-color' id='dash-zone_13' value='#f7f7f7' />
          <format attr='background-color' id='dash-zone_20' value='#f7f7f7' />
          <format attr='border-style' id='dash-zone_20' value='solid' />
          <format attr='border-color' id='dash-zone_20' value='#c0c0c0' />
        </style-rule>
      </style>
      <size minheight='620' minwidth='1000' />
      <datasources>
        <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
      </datasources>
      <datasource-dependencies datasource='dataengine.42019.618651678240'>
        <column datatype='string' name='[Region]' role='dimension' type='nominal' />
        <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='16' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='14' param='horz' type='layout-flow' w='99677' x='0' y='0'>
              <zone h='100000' id='12' param='horz' type='layout-flow' w='99677' x='0' y='0'>
                <zone h='100000' id='10' param='vert' type='layout-flow' w='99677' x='0' y='0'>
                  <zone h='6352' id='9' type='title' w='99677' x='0' y='0' />
                  <zone h='93648' id='5' param='horz' type='layout-flow' w='99677' x='0' y='6352'>
                    <zone h='93648' id='3' type='layout-basic' w='99677' x='0' y='6352'>
                      <zone h='43198' id='1' name='ProductView' w='86800' x='0' y='6352' />
                      <zone h='50450' id='8' name='ProductDetails' w='86800' x='0' y='49550' />
                      <zone h='93648' id='20' param='vert' type='layout-flow' w='12877' x='86800' y='6352'>
                        <zone h='7181' id='26' mode='dropdown' name='ProductDetails' param='[dataengine.42019.618651678240].[none:Region:nk]' type='filter' w='12555' x='86961' y='6628' />
                        <zone h='8977' id='22' name='ProductView' pane-specification-id='0' param='[dataengine.42019.618651678240].[sum:Sales:qk]' type='color' w='12555' x='86961' y='13809' />
                        <zone h='8977' id='23' name='ProductDetails' pane-specification-id='0' param='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' type='color' w='12555' x='86961' y='22786' />
                        <zone h='67409' id='24' type='empty' w='12555' x='86961' y='31763' />
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run fontname='Tableau Medium' fontsize='12'>Product &#10;Drilldown</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='380' minheight='380' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='100000' id='16' param='horz' type='layout-flow' w='100000' x='0' y='0'>
                <zone h='100000' id='14' param='horz' type='layout-flow' w='99400' x='0' y='0'>
                  <zone h='100000' id='12' param='horz' type='layout-flow' w='99400' x='0' y='0'>
                    <zone h='100000' id='10' param='vert' type='layout-flow' w='99400' x='0' y='0'>
                      <zone fixed-size='76' h='20000' id='27' is-fixed='true' param='horz' type='layout-flow' w='99400' x='0' y='0'>
                        <zone fixed-size='222' h='20000' id='9' is-fixed='true' type='title' w='35083' x='0' y='0' />
                        <zone h='20000' id='26' mode='dropdown' name='ProductDetails' param='[dataengine.42019.618651678240].[none:Region:nk]' type='filter' w='25188' x='35083' y='0' />
                        <zone h='20000' id='23' name='ProductDetails' pane-specification-id='0' param='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' type='color' w='39129' x='60271' y='0' />
                      </zone>
                      <zone h='80000' id='5' param='horz' type='layout-flow' w='99400' x='0' y='20000'>
                        <zone h='80000' id='3' type='layout-basic' w='99400' x='0' y='20000'>
                          <zone h='80000' id='8' name='ProductDetails' show-title='false' w='99400' x='0' y='20000' />
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
    </dashboard>
    <dashboard name='Shipping'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='0'>On-Time Shipment Trends</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-container'>
          <format attr='border-style' id='dash-zone_22' value='solid' />
          <format attr='border-color' id='dash-zone_22' value='#f7f7f7' />
          <format attr='background-color' id='dash-zone_22' value='#00000000' />
          <format attr='border-color' id='dash-zone_26' value='#c0c0c0' />
          <format attr='border-style' id='dash-zone_26' value='none' />
          <format attr='background-color' id='dash-zone_31' value='#f7f7f7' />
          <format attr='border-style' id='dash-zone_31' value='solid' />
          <format attr='border-color' id='dash-zone_31' value='#d7d7d7' />
        </style-rule>
      </style>
      <size minheight='620' minwidth='1000' />
      <datasources>
        <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
      </datasources>
      <datasource-dependencies datasource='dataengine.42019.618651678240'>
        <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
        <column datatype='string' name='[Region]' role='dimension' type='nominal' />
        <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
        <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
        <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
        <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
        <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='92459' id='35' param='vert' type='layout-flow' w='88947' x='0' y='7541'>
            <zone fixed-size='53' h='8123' id='19' is-fixed='true' name='ShipSummary' show-title='false' w='88947' x='0' y='7541'>
              <layout-cache type-h='cell' type-w='fixed' />
            </zone>
            <zone fixed-size='270' h='37018' id='1' is-fixed='true' name='ShippingTrend' show-title='false' w='88947' x='0' y='15664'>
              <layout-cache minheight='130' type-h='scalable' type-w='fixed' />
            </zone>
            <zone h='47318' id='3' name='DaystoShip' w='88947' x='0' y='52682'>
              <layout-cache fixed-size-h='30300' type-h='fixed' type-w='fixed' />
            </zone>
          </zone>
          <zone h='92459' id='37' param='horz' type='layout-flow' w='11053' x='88947' y='7541'>
            <zone fixed-size='80' h='92459' id='31' is-fixed='true' param='vert' type='layout-flow' w='11053' x='88947' y='7541'>
              <zone h='14382' id='15' mode='radiolist' name='ShippingTrend' param='[dataengine.42019.618651678240].[yr:Order Date:ok]' show-all='false' type='filter' w='10410' x='89108' y='7807' />
              <zone h='16912' id='16' mode='radiolist' name='ShippingTrend' param='[dataengine.42019.618651678240].[qr:Order Date:ok]' type='filter' w='10410' x='89108' y='22189' />
              <zone h='16912' id='34' mode='radiolist' name='ShippingTrend' param='[dataengine.42019.618651678240].[none:Region:nk]' type='filter' w='10410' x='89108' y='39101' />
              <zone h='16912' id='27' name='ShippingTrend' param='[dataengine.42019.618651678240].[none:Ship Mode:nk]' type='filter' w='10410' x='89108' y='56013' />
              <zone h='26276' id='33' type='empty' w='10410' x='89108' y='72925' />
            </zone>
          </zone>
          <zone h='7541' id='10' type='title' w='100000' x='0' y='0' />
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='72'>
    <window class='dashboard' name='Overview'>
      <viewpoints>
        <viewpoint name='Sale Map'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]</field>
              <field>[excel-direct.41946.598980972223].[sum:Sales:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sales by Product'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales by Segment'>
          <zoom type='entire-view' />
          <highlight field='[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Total Sales'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <device-preview>
        <device is-portrait='false' name='iPhone 6' type='Phone' />
      </device-preview>
    </window>
    <window class='dashboard' name='Product'>
      <viewpoints>
        <viewpoint name='ProductDetails'>
          <zoom type='fit-width' />
          <highlight>
            <color-one-way>
              <field>[dataengine.42016.671153020834].[usr:Calculation_0561103150105895:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='ProductView'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[dataengine.42016.671153020834].[sum:Sales:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <device-preview>
        <device is-portrait='false' name='iPhone 6' type='Phone' />
      </device-preview>
    </window>
    <window class='dashboard' name='Customers'>
      <viewpoints>
        <viewpoint name='CustomerOverview'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='CustomerRank' />
        <viewpoint name='CustomerScatter'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Shipping'>
      <viewpoints>
        <viewpoint name='DaystoShip' />
        <viewpoint name='ShipSummary'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='ShippingTrend'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[excel-direct.41946.598980972223].[none:Calculation_6401103171259723:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='Performance'>
      <cards>
        <edge name='left'>
          <strip size='210'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='82'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[dataengine.42019.618651678240].[yr:Order Date:ok]' type='filter' />
            <card pane-specification-id='0' param='[dataengine.42019.618651678240].[usr:Calculation_9951107165644870:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[dataengine.42016.671153020834].[usr:Calculation_9951107165644870:nk]</field>
            <field>[dataengine.42019.618651678240].[none:Calculation_812899745105993729:qk]</field>
            <field>[excel-direct.41946.598980972223].[none:ProductCategory:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:Segment:nk]</field>
            <field>[excel-direct.41946.598980972223].[qr:OrderDate:ok]</field>
            <field>[excel-direct.41946.598980972223].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Commission Model'>
      <viewpoints>
        <viewpoint name='CommissionProjection'>
          <highlight field='[Sales Planning new].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='OTE'>
          <zoom type='entire-view' />
          <geo-search-visibility value='1' />
        </viewpoint>
        <viewpoint name='QuotaAttainment' />
        <viewpoint name='Sales'>
          <zoom type='entire-view' />
          <geo-search-visibility value='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Order Details'>
      <viewpoints>
        <viewpoint name='ProductDetailSheet'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='Forecast'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='70'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='188'>
            <card pane-specification-id='2' param='[dataengine.42019.618651678240].[none:Segment:nk]&#10;[dataengine.42019.618651678240].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[dataengine.42016.671153020834].[none:Forecast Indicator:nk]</field>
            <field>[dataengine.42019.618651678240].[none:Forecast Indicator:nk]</field>
            <field>[dataengine.42019.618651678240].[none:Segment:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:OrderDate:qk]</field>
            <field>[excel-direct.41946.598980972223].[none:ProductCategory:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:Segment:nk]</field>
            <field>[excel-direct.41946.598980972223].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='What If Forecast'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='74'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card mode='radiolist' param='[dataengine.42019.618651678240].[yr:Order Date:ok]' type='filter' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='slider' param='[Parameters].[Parameter 2]' type='parameter' />
            <card type='caption' />
            <card pane-specification-id='0' param='[dataengine.42019.618651678240].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[dataengine.42016.671153020834].[:Measure Names]</field>
            <field>[dataengine.42019.618651678240].[:Measure Names]</field>
            <field>[dataengine.42019.618651678240].[yr:Order Date:ok]</field>
            <field>[excel-direct.41946.598980972223].[none:ProductCategory:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:Region:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:Segment:nk]</field>
            <field>[excel-direct.41946.598980972223].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Sheet 21'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='CommissionProjection'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='3' param='[Sales Planning new].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[New Quota]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 1 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='CustomerOverview'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[dataengine.42019.618651678240].[:Measure Names]</field>
            <field>[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]</field>
            <field>[excel-direct.41946.598980972223].[none:CustomerID:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:ProductCategory:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:Region:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:Segment:nk]</field>
            <field>[excel-direct.41946.598980972223].[qr:OrderDate:ok]</field>
            <field>[excel-direct.41946.598980972223].[usr:Calculation_0561103150105895:nk]</field>
            <field>[excel-direct.41946.598980972223].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='CustomerRank'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[dataengine.42019.618651678240].[none:AdhocCluster:2:ok]</field>
            <field>[excel-direct.41946.598980972223].[none:CustomerName:nk]</field>
            <field>[excel-direct.41946.598980972223].[usr:Calculation_0561103150105895:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='CustomerScatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[dataengine.42019.618651678240].[Customer Name &amp; Region (clusters)]</field>
            <field>[dataengine.42019.618651678240].[none:Region:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:CustomerID:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:CustomerName:nk]</field>
            <field>[excel-direct.41946.598980972223].[usr:Calculation_0561103150105895:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='DaystoShip'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[dataengine.42019.618651678240].[none:Customer Name:nk]</field>
            <field>[dataengine.42019.618651678240].[none:Order ID:nk]</field>
            <field>[dataengine.42019.618651678240].[none:Ship Mode:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:Calculation_1331103172136889:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:Calculation_6401103171259723:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:CustomerID:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:CustomerName:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:OrderDate:qk]</field>
            <field>[excel-direct.41946.598980972223].[none:OrderID:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:ProductName:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:RowID:ok]</field>
            <field>[excel-direct.41946.598980972223].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='OTE'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='ProductDetailSheet'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[dataengine.42019.618651678240].[none:Category:nk]</field>
            <field>[dataengine.42019.618651678240].[none:City:nk]</field>
            <field>[dataengine.42019.618651678240].[none:Customer Name:nk]</field>
            <field>[dataengine.42019.618651678240].[none:Order Date:qk]</field>
            <field>[dataengine.42019.618651678240].[none:Order ID:nk]</field>
            <field>[dataengine.42019.618651678240].[none:Postal Code:ok]</field>
            <field>[dataengine.42019.618651678240].[none:Product Name:nk]</field>
            <field>[dataengine.42019.618651678240].[none:Region:nk]</field>
            <field>[dataengine.42019.618651678240].[none:Segment:nk]</field>
            <field>[dataengine.42019.618651678240].[none:Ship Date:qk]</field>
            <field>[dataengine.42019.618651678240].[none:Ship Mode:nk]</field>
            <field>[dataengine.42019.618651678240].[none:State:nk]</field>
            <field>[dataengine.42019.618651678240].[yr:Order Date:ok]</field>
            <field>[dataengine.42019.618651678240].[yr:Ship Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='ProductDetails'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[dataengine.42019.618651678240].[none:Category:nk]</field>
            <field>[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]</field>
            <field>[excel-direct.41946.598980972223].[:Measure Names]</field>
            <field>[excel-direct.41946.598980972223].[mn:OrderDate:ok]</field>
            <field>[excel-direct.41946.598980972223].[none:OrderDate:qk]</field>
            <field>[excel-direct.41946.598980972223].[none:ProductCategory:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:ProductName:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:ProductSub-Category:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:Region:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:Segment:nk]</field>
            <field>[excel-direct.41946.598980972223].[usr:Calculation_0561103150105895:nk]</field>
            <field>[excel-direct.41946.598980972223].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='ProductView'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[dataengine.42019.618651678240].[yr:Order Date:ok]</field>
            <field>[excel-direct.41946.598980972223].[none:OrderDate:qk]</field>
            <field>[excel-direct.41946.598980972223].[none:ProductCategory:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:ProductSub-Category:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:Region:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:Segment:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:State:nk]</field>
            <field>[excel-direct.41946.598980972223].[qr:OrderDate:ok]</field>
            <field>[excel-direct.41946.598980972223].[sum:Sales:qk]</field>
            <field>[excel-direct.41946.598980972223].[usr:Calculation_0561103150105895:nk]</field>
            <field>[excel-direct.41946.598980972223].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='QuotaAttainment'>
      <cards>
        <edge name='left'>
          <strip size='229'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[Sales Planning new].[usr:Achievement (variable) (copy):nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[New Quota]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 1 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Sales Planning new].[none:Sales Person:nk]</field>
            <field>[Sales Planning new].[usr:Achievement (variable) (copy):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Sale Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' type='color' />
            <card pane-specification-id='2' param='[dataengine.42019.618651678240].[sum:Sales:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[dataengine.42019.618651678240].[none:Postal Code:ok]</field>
            <field>[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]</field>
            <field>[excel-direct.41946.598980972223].[none:OrderDate:ok]</field>
            <field>[excel-direct.41946.598980972223].[none:OrderDate:qk]</field>
            <field>[excel-direct.41946.598980972223].[none:PostalCode:ok]</field>
            <field>[excel-direct.41946.598980972223].[none:Region:nk]</field>
            <field>[excel-direct.41946.598980972223].[sum:Sales:qk]</field>
            <field>[excel-direct.41946.598980972223].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Sales'>
      <cards>
        <edge name='left'>
          <strip size='253'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Sales by Product'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='4' param='[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:Calculation_0351103145857149:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:ProductCategory:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:Segment:nk]</field>
            <field>[excel-direct.41946.598980972223].[usr:Calculation_0561103150105895:nk]</field>
            <field>[excel-direct.41946.598980972223].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Sales by Segment'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='3' param='[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]</field>
            <field>[dataengine.42019.618651678240].[none:Order Date:qk]</field>
            <field>[dataengine.42019.618651678240].[yr:Order Date:ok]</field>
            <field>[excel-direct.41946.598980972223].[none:Segment:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:State:nk]</field>
            <field>[excel-direct.41946.598980972223].[usr:Calculation_0561103150105895:nk]</field>
            <field>[excel-direct.41946.598980972223].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='ShipSummary'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[excel-direct.41946.598980972223].[:Measure Names]</field>
            <field>[excel-direct.41946.598980972223].[none:Calculation_6401103171259723:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='ShippingTrend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.41946.598980972223].[none:Calculation_6401103171259723:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:ProductCategory:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:Region:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:Segment:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:ShipMode:nk]</field>
            <field>[excel-direct.41946.598980972223].[qr:OrderDate:ok]</field>
            <field>[excel-direct.41946.598980972223].[tmn:OrderDate:qk]</field>
            <field>[excel-direct.41946.598980972223].[tyr:OrderDate:qk]</field>
            <field>[excel-direct.41946.598980972223].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Total Sales'>
      <cards>
        <edge name='left'>
          <strip size='275'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='8'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[dataengine.42019.618651678240].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Commission Model' width='192'>
      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
      eJttbpf/DxN5cEmujLi9AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Customers' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Forecast' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Order Details' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Overview' width='192'>
      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
      nhfMNvcIMNkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Performance' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Product' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 21' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Shipping' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='What If Forecast' width='192'>
      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
      MqgAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
